<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1302" onload="init(evt)" viewBox="0 0 1200 1302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1302" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1285.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1285.00"> </text><svg id="frames" x="10" width="1180" total_samples="981"><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.10%)</title><rect x="0.0000%" y="1189" width="0.1019%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>dyld`start (2 samples, 0.20%)</title><rect x="0.0000%" y="1237" width="0.2039%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1247.50"></text></g><g><title>web_crawler`main (2 samples, 0.20%)</title><rect x="0.0000%" y="1221" width="0.2039%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1231.50"></text></g><g><title>web_crawler`std::rt::lang_start_internal (2 samples, 0.20%)</title><rect x="0.0000%" y="1205" width="0.2039%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1215.50"></text></g><g><title>web_crawler`std::rt::lang_start::_{{closure}} (1 samples, 0.10%)</title><rect x="0.1019%" y="1189" width="0.1019%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1199.50"></text></g><g><title>web_crawler`std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.10%)</title><rect x="0.1019%" y="1173" width="0.1019%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1183.50"></text></g><g><title>web_crawler`web_crawler::main (1 samples, 0.10%)</title><rect x="0.1019%" y="1157" width="0.1019%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1167.50"></text></g><g><title>web_crawler`tokio::runtime::runtime::Runtime::block_on (1 samples, 0.10%)</title><rect x="0.1019%" y="1141" width="0.1019%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1151.50"></text></g><g><title>web_crawler`tokio::runtime::scheduler::current_thread::CurrentThread::block_on (1 samples, 0.10%)</title><rect x="0.1019%" y="1125" width="0.1019%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1135.50"></text></g><g><title>web_crawler`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.10%)</title><rect x="0.1019%" y="1109" width="0.1019%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1119.50"></text></g><g><title>web_crawler`tokio::runtime::scheduler::current_thread::Context::park (1 samples, 0.10%)</title><rect x="0.1019%" y="1093" width="0.1019%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1103.50"></text></g><g><title>web_crawler`tokio::runtime::time::Driver::park_internal (1 samples, 0.10%)</title><rect x="0.1019%" y="1077" width="0.1019%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1087.50"></text></g><g><title>web_crawler`tokio::runtime::io::Driver::turn (1 samples, 0.10%)</title><rect x="0.1019%" y="1061" width="0.1019%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.10%)</title><rect x="0.1019%" y="1045" width="0.1019%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.3519%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__posix_spawn (1 samples, 0.10%)</title><rect x="0.2039%" y="1237" width="0.1019%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="0.4539%" y="1247.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.20%)</title><rect x="0.3058%" y="1237" width="0.2039%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="2"/><text x="0.5558%" y="1247.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (2 samples, 0.20%)</title><rect x="0.5097%" y="1237" width="0.2039%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="2"/><text x="0.7597%" y="1247.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (1 samples, 0.10%)</title><rect x="0.6116%" y="1221" width="0.1019%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1231.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1 samples, 0.10%)</title><rect x="0.6116%" y="1205" width="0.1019%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1215.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1 samples, 0.10%)</title><rect x="0.6116%" y="1189" width="0.1019%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1199.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1 samples, 0.10%)</title><rect x="0.6116%" y="1173" width="0.1019%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.10%)</title><rect x="0.6116%" y="1157" width="0.1019%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_block_async_invoke2 (1 samples, 0.10%)</title><rect x="0.6116%" y="1141" width="0.1019%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1151.50"></text></g><g><title>CoreAnalytics`invocation function for block in CoreAnalytics::Client::sendXpcMessage_sync (1 samples, 0.10%)</title><rect x="0.6116%" y="1125" width="0.1019%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1135.50"></text></g><g><title>CoreAnalytics`CoreAnalytics::Client::retryXpcMessage_sync (1 samples, 0.10%)</title><rect x="0.6116%" y="1109" width="0.1019%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1119.50"></text></g><g><title>CoreAnalytics`CoreAnalytics::Client::retryXpcMessageHelper_sync (1 samples, 0.10%)</title><rect x="0.6116%" y="1093" width="0.1019%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1103.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply (1 samples, 0.10%)</title><rect x="0.6116%" y="1077" width="0.1019%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1087.50"></text></g><g><title>libxpc.dylib`_xpc_connection_enqueue (1 samples, 0.10%)</title><rect x="0.6116%" y="1061" width="0.1019%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1071.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_async_reply_4libxpc (1 samples, 0.10%)</title><rect x="0.6116%" y="1045" width="0.1019%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 0.10%)</title><rect x="0.6116%" y="1029" width="0.1019%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.10%)</title><rect x="0.6116%" y="1013" width="0.1019%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.10%)</title><rect x="0.6116%" y="997" width="0.1019%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="1"/><text x="0.8616%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.10%)</title><rect x="0.6116%" y="981" width="0.1019%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="1"/><text x="0.8616%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.10%)</title><rect x="0.6116%" y="965" width="0.1019%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="1"/><text x="0.8616%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.10%)</title><rect x="0.6116%" y="949" width="0.1019%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="0.8616%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.20%)</title><rect x="0.7136%" y="1157" width="0.2039%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="2"/><text x="0.9636%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.31%)</title><rect x="0.9174%" y="1157" width="0.3058%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="3"/><text x="1.1674%" y="1167.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.10%)</title><rect x="1.2232%" y="1157" width="0.1019%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="1"/><text x="1.4732%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.20%)</title><rect x="1.4271%" y="1141" width="0.2039%" height="15" fill="rgb(238,167,29)" fg:x="14" fg:w="2"/><text x="1.6771%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.20%)</title><rect x="1.4271%" y="1125" width="0.2039%" height="15" fill="rgb(232,182,51)" fg:x="14" fg:w="2"/><text x="1.6771%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="1.5291%" y="1109" width="0.1019%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="1"/><text x="1.7791%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.10%)</title><rect x="1.6310%" y="1109" width="0.1019%" height="15" fill="rgb(208,69,12)" fg:x="16" fg:w="1"/><text x="1.8810%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.10%)</title><rect x="1.7329%" y="1093" width="0.1019%" height="15" fill="rgb(235,93,37)" fg:x="17" fg:w="1"/><text x="1.9829%" y="1103.50"></text></g><g><title>web_crawler`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="1.7329%" y="1109" width="0.3058%" height="15" fill="rgb(213,116,39)" fg:x="17" fg:w="3"/><text x="1.9829%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.20%)</title><rect x="1.8349%" y="1093" width="0.2039%" height="15" fill="rgb(222,207,29)" fg:x="18" fg:w="2"/><text x="2.0849%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.20%)</title><rect x="1.8349%" y="1077" width="0.2039%" height="15" fill="rgb(206,96,30)" fg:x="18" fg:w="2"/><text x="2.0849%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (1 samples, 0.10%)</title><rect x="1.9368%" y="1061" width="0.1019%" height="15" fill="rgb(218,138,4)" fg:x="19" fg:w="1"/><text x="2.1868%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="2.0387%" y="1093" width="0.1019%" height="15" fill="rgb(250,191,14)" fg:x="20" fg:w="1"/><text x="2.2887%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="2.0387%" y="1077" width="0.1019%" height="15" fill="rgb(239,60,40)" fg:x="20" fg:w="1"/><text x="2.2887%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (1 samples, 0.10%)</title><rect x="2.0387%" y="1061" width="0.1019%" height="15" fill="rgb(206,27,48)" fg:x="20" fg:w="1"/><text x="2.2887%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.10%)</title><rect x="2.0387%" y="1045" width="0.1019%" height="15" fill="rgb(225,35,8)" fg:x="20" fg:w="1"/><text x="2.2887%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="2.1407%" y="1061" width="0.1019%" height="15" fill="rgb(250,213,24)" fg:x="21" fg:w="1"/><text x="2.3907%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="2.1407%" y="1045" width="0.1019%" height="15" fill="rgb(247,123,22)" fg:x="21" fg:w="1"/><text x="2.3907%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="2.1407%" y="1029" width="0.1019%" height="15" fill="rgb(231,138,38)" fg:x="21" fg:w="1"/><text x="2.3907%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.10%)</title><rect x="2.2426%" y="1045" width="0.1019%" height="15" fill="rgb(231,145,46)" fg:x="22" fg:w="1"/><text x="2.4926%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.10%)</title><rect x="2.3445%" y="1013" width="0.1019%" height="15" fill="rgb(251,118,11)" fg:x="23" fg:w="1"/><text x="2.5945%" y="1023.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="2.2426%" y="1061" width="0.3058%" height="15" fill="rgb(217,147,25)" fg:x="22" fg:w="3"/><text x="2.4926%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.20%)</title><rect x="2.3445%" y="1045" width="0.2039%" height="15" fill="rgb(247,81,37)" fg:x="23" fg:w="2"/><text x="2.5945%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.20%)</title><rect x="2.3445%" y="1029" width="0.2039%" height="15" fill="rgb(209,12,38)" fg:x="23" fg:w="2"/><text x="2.5945%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (1 samples, 0.10%)</title><rect x="2.4465%" y="1013" width="0.1019%" height="15" fill="rgb(227,1,9)" fg:x="24" fg:w="1"/><text x="2.6965%" y="1023.50"></text></g><g><title>web_crawler`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1 samples, 0.10%)</title><rect x="2.5484%" y="1061" width="0.1019%" height="15" fill="rgb(248,47,43)" fg:x="25" fg:w="1"/><text x="2.7984%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.10%)</title><rect x="2.6504%" y="1045" width="0.1019%" height="15" fill="rgb(221,10,30)" fg:x="26" fg:w="1"/><text x="2.9004%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.10%)</title><rect x="2.7523%" y="1029" width="0.1019%" height="15" fill="rgb(210,229,1)" fg:x="27" fg:w="1"/><text x="3.0023%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="3.2620%" y="997" width="0.1019%" height="15" fill="rgb(222,148,37)" fg:x="32" fg:w="1"/><text x="3.5120%" y="1007.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.71%)</title><rect x="2.7523%" y="1045" width="0.7136%" height="15" fill="rgb(234,67,33)" fg:x="27" fg:w="7"/><text x="3.0023%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.61%)</title><rect x="2.8542%" y="1029" width="0.6116%" height="15" fill="rgb(247,98,35)" fg:x="28" fg:w="6"/><text x="3.1042%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.51%)</title><rect x="2.9562%" y="1013" width="0.5097%" height="15" fill="rgb(247,138,52)" fg:x="29" fg:w="5"/><text x="3.2062%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.10%)</title><rect x="3.3639%" y="997" width="0.1019%" height="15" fill="rgb(213,79,30)" fg:x="33" fg:w="1"/><text x="3.6139%" y="1007.50"></text></g><g><title>web_crawler`playwright::imp::core::connection::Context::dispose (19 samples, 1.94%)</title><rect x="1.6310%" y="1141" width="1.9368%" height="15" fill="rgb(246,177,23)" fg:x="16" fg:w="19"/><text x="1.8810%" y="1151.50">w..</text></g><g><title>web_crawler`alloc::sync::Arc&lt;T&gt;::drop_slow (19 samples, 1.94%)</title><rect x="1.6310%" y="1125" width="1.9368%" height="15" fill="rgb(230,62,27)" fg:x="16" fg:w="19"/><text x="1.8810%" y="1135.50">w..</text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;playwright::imp::core::remote_object::ChannelOwner&gt; (15 samples, 1.53%)</title><rect x="2.0387%" y="1109" width="1.5291%" height="15" fill="rgb(216,154,8)" fg:x="20" fg:w="15"/><text x="2.2887%" y="1119.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.43%)</title><rect x="2.1407%" y="1093" width="1.4271%" height="15" fill="rgb(244,35,45)" fg:x="21" fg:w="14"/><text x="2.3907%" y="1103.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.43%)</title><rect x="2.1407%" y="1077" width="1.4271%" height="15" fill="rgb(251,115,12)" fg:x="21" fg:w="14"/><text x="2.3907%" y="1087.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.92%)</title><rect x="2.6504%" y="1061" width="0.9174%" height="15" fill="rgb(240,54,50)" fg:x="26" fg:w="9"/><text x="2.9004%" y="1071.50"></text></g><g><title>web_crawler`DYLD-STUB$$free (1 samples, 0.10%)</title><rect x="3.4659%" y="1045" width="0.1019%" height="15" fill="rgb(233,84,52)" fg:x="34" fg:w="1"/><text x="3.7159%" y="1055.50"></text></g><g><title>web_crawler`playwright::imp::core::connection::Context::respond_wait (1 samples, 0.10%)</title><rect x="3.5678%" y="1141" width="0.1019%" height="15" fill="rgb(207,117,47)" fg:x="35" fg:w="1"/><text x="3.8178%" y="1151.50"></text></g><g><title>web_crawler`tokio::runtime::task::waker::wake_by_val (1 samples, 0.10%)</title><rect x="3.5678%" y="1125" width="0.1019%" height="15" fill="rgb(249,43,39)" fg:x="35" fg:w="1"/><text x="3.8178%" y="1135.50"></text></g><g><title>web_crawler`tokio::task::local::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::schedule (1 samples, 0.10%)</title><rect x="3.5678%" y="1109" width="0.1019%" height="15" fill="rgb(209,38,44)" fg:x="35" fg:w="1"/><text x="3.8178%" y="1119.50"></text></g><g><title>web_crawler`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="3.5678%" y="1093" width="0.1019%" height="15" fill="rgb(236,212,23)" fg:x="35" fg:w="1"/><text x="3.8178%" y="1103.50"></text></g><g><title>web_crawler`&lt;playwright::imp::page::Page as playwright::imp::core::remote_object::RemoteObject&gt;::handle_event (1 samples, 0.10%)</title><rect x="3.6697%" y="1125" width="0.1019%" height="15" fill="rgb(242,79,21)" fg:x="36" fg:w="1"/><text x="3.9197%" y="1135.50"></text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="3.6697%" y="1109" width="0.1019%" height="15" fill="rgb(211,96,35)" fg:x="36" fg:w="1"/><text x="3.9197%" y="1119.50"></text></g><g><title>web_crawler`serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="3.6697%" y="1093" width="0.1019%" height="15" fill="rgb(253,215,40)" fg:x="36" fg:w="1"/><text x="3.9197%" y="1103.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="3.6697%" y="1077" width="0.1019%" height="15" fill="rgb(211,81,21)" fg:x="36" fg:w="1"/><text x="3.9197%" y="1087.50"></text></g><g><title>web_crawler`playwright::imp::core::remote_object::remote_enum::RemoteArc::handle_event (2 samples, 0.20%)</title><rect x="3.6697%" y="1141" width="0.2039%" height="15" fill="rgb(208,190,38)" fg:x="36" fg:w="2"/><text x="3.9197%" y="1151.50"></text></g><g><title>web_crawler`&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="3.7717%" y="1125" width="0.1019%" height="15" fill="rgb(235,213,38)" fg:x="37" fg:w="1"/><text x="4.0217%" y="1135.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.20%)</title><rect x="3.9755%" y="1109" width="0.2039%" height="15" fill="rgb(237,122,38)" fg:x="39" fg:w="2"/><text x="4.2255%" y="1119.50"></text></g><g><title>web_crawler`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="3.9755%" y="1093" width="0.2039%" height="15" fill="rgb(244,218,35)" fg:x="39" fg:w="2"/><text x="4.2255%" y="1103.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.20%)</title><rect x="3.9755%" y="1077" width="0.2039%" height="15" fill="rgb(240,68,47)" fg:x="39" fg:w="2"/><text x="4.2255%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (1 samples, 0.10%)</title><rect x="4.0775%" y="1061" width="0.1019%" height="15" fill="rgb(210,16,53)" fg:x="40" fg:w="1"/><text x="4.3275%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.10%)</title><rect x="4.1794%" y="981" width="0.1019%" height="15" fill="rgb(235,124,12)" fg:x="41" fg:w="1"/><text x="4.4294%" y="991.50"></text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.20%)</title><rect x="4.1794%" y="1077" width="0.2039%" height="15" fill="rgb(224,169,11)" fg:x="41" fg:w="2"/><text x="4.4294%" y="1087.50"></text></g><g><title>web_crawler`serde_json::value::de::visit_array (2 samples, 0.20%)</title><rect x="4.1794%" y="1061" width="0.2039%" height="15" fill="rgb(250,166,2)" fg:x="41" fg:w="2"/><text x="4.4294%" y="1071.50"></text></g><g><title>web_crawler`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.20%)</title><rect x="4.1794%" y="1045" width="0.2039%" height="15" fill="rgb(242,216,29)" fg:x="41" fg:w="2"/><text x="4.4294%" y="1055.50"></text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="4.1794%" y="1029" width="0.2039%" height="15" fill="rgb(230,116,27)" fg:x="41" fg:w="2"/><text x="4.4294%" y="1039.50"></text></g><g><title>web_crawler`serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="4.1794%" y="1013" width="0.2039%" height="15" fill="rgb(228,99,48)" fg:x="41" fg:w="2"/><text x="4.4294%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.20%)</title><rect x="4.1794%" y="997" width="0.2039%" height="15" fill="rgb(253,11,6)" fg:x="41" fg:w="2"/><text x="4.4294%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="4.2813%" y="981" width="0.1019%" height="15" fill="rgb(247,143,39)" fg:x="42" fg:w="1"/><text x="4.5313%" y="991.50"></text></g><g><title>web_crawler`playwright::imp::request::Request::try_new (5 samples, 0.51%)</title><rect x="3.9755%" y="1125" width="0.5097%" height="15" fill="rgb(236,97,10)" fg:x="39" fg:w="5"/><text x="4.2255%" y="1135.50"></text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.31%)</title><rect x="4.1794%" y="1109" width="0.3058%" height="15" fill="rgb(233,208,19)" fg:x="41" fg:w="3"/><text x="4.4294%" y="1119.50"></text></g><g><title>web_crawler`serde_json::value::de::visit_object (3 samples, 0.31%)</title><rect x="4.1794%" y="1093" width="0.3058%" height="15" fill="rgb(216,164,2)" fg:x="41" fg:w="3"/><text x="4.4294%" y="1103.50"></text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="4.3833%" y="1077" width="0.1019%" height="15" fill="rgb(220,129,5)" fg:x="43" fg:w="1"/><text x="4.6333%" y="1087.50"></text></g><g><title>web_crawler`serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="4.3833%" y="1061" width="0.1019%" height="15" fill="rgb(242,17,10)" fg:x="43" fg:w="1"/><text x="4.6333%" y="1071.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="4.3833%" y="1045" width="0.1019%" height="15" fill="rgb(242,107,0)" fg:x="43" fg:w="1"/><text x="4.6333%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="4.3833%" y="1029" width="0.1019%" height="15" fill="rgb(251,28,31)" fg:x="43" fg:w="1"/><text x="4.6333%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.10%)</title><rect x="4.4852%" y="1061" width="0.1019%" height="15" fill="rgb(233,223,10)" fg:x="44" fg:w="1"/><text x="4.7352%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="4.5872%" y="1061" width="0.1019%" height="15" fill="rgb(215,21,27)" fg:x="45" fg:w="1"/><text x="4.8372%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="4.5872%" y="1045" width="0.1019%" height="15" fill="rgb(232,23,21)" fg:x="45" fg:w="1"/><text x="4.8372%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.10%)</title><rect x="4.5872%" y="1029" width="0.1019%" height="15" fill="rgb(244,5,23)" fg:x="45" fg:w="1"/><text x="4.8372%" y="1039.50"></text></g><g><title>web_crawler`&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="4.6891%" y="1061" width="0.6116%" height="15" fill="rgb(226,81,46)" fg:x="46" fg:w="6"/><text x="4.9391%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.51%)</title><rect x="4.7910%" y="1045" width="0.5097%" height="15" fill="rgb(247,70,30)" fg:x="47" fg:w="5"/><text x="5.0410%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.41%)</title><rect x="4.8930%" y="1029" width="0.4077%" height="15" fill="rgb(212,68,19)" fg:x="48" fg:w="4"/><text x="5.1430%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.41%)</title><rect x="4.8930%" y="1013" width="0.4077%" height="15" fill="rgb(240,187,13)" fg:x="48" fg:w="4"/><text x="5.1430%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="5.1988%" y="997" width="0.1019%" height="15" fill="rgb(223,113,26)" fg:x="51" fg:w="1"/><text x="5.4488%" y="1007.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.92%)</title><rect x="4.4852%" y="1109" width="0.9174%" height="15" fill="rgb(206,192,2)" fg:x="44" fg:w="9"/><text x="4.7352%" y="1119.50"></text></g><g><title>web_crawler`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.92%)</title><rect x="4.4852%" y="1093" width="0.9174%" height="15" fill="rgb(241,108,4)" fg:x="44" fg:w="9"/><text x="4.7352%" y="1103.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.92%)</title><rect x="4.4852%" y="1077" width="0.9174%" height="15" fill="rgb(247,173,49)" fg:x="44" fg:w="9"/><text x="4.7352%" y="1087.50"></text></g><g><title>web_crawler`__rdl_alloc (1 samples, 0.10%)</title><rect x="5.3007%" y="1061" width="0.1019%" height="15" fill="rgb(224,114,35)" fg:x="52" fg:w="1"/><text x="5.5507%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_try_free_default (1 samples, 0.10%)</title><rect x="5.4027%" y="1093" width="0.1019%" height="15" fill="rgb(245,159,27)" fg:x="53" fg:w="1"/><text x="5.6527%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="5.6065%" y="1077" width="0.1019%" height="15" fill="rgb(245,172,44)" fg:x="55" fg:w="1"/><text x="5.8565%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.10%)</title><rect x="5.7085%" y="1029" width="0.1019%" height="15" fill="rgb(236,23,11)" fg:x="56" fg:w="1"/><text x="5.9585%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="6.3201%" y="997" width="0.1019%" height="15" fill="rgb(205,117,38)" fg:x="62" fg:w="1"/><text x="6.5701%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.71%)</title><rect x="5.8104%" y="1029" width="0.7136%" height="15" fill="rgb(237,72,25)" fg:x="57" fg:w="7"/><text x="6.0604%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.51%)</title><rect x="6.0143%" y="1013" width="0.5097%" height="15" fill="rgb(244,70,9)" fg:x="59" fg:w="5"/><text x="6.2643%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.10%)</title><rect x="6.4220%" y="997" width="0.1019%" height="15" fill="rgb(217,125,39)" fg:x="63" fg:w="1"/><text x="6.6720%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.10%)</title><rect x="6.5240%" y="1029" width="0.1019%" height="15" fill="rgb(235,36,10)" fg:x="64" fg:w="1"/><text x="6.7740%" y="1039.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 1.02%)</title><rect x="5.7085%" y="1077" width="1.0194%" height="15" fill="rgb(251,123,47)" fg:x="56" fg:w="10"/><text x="5.9585%" y="1087.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 1.02%)</title><rect x="5.7085%" y="1061" width="1.0194%" height="15" fill="rgb(221,13,13)" fg:x="56" fg:w="10"/><text x="5.9585%" y="1071.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 1.02%)</title><rect x="5.7085%" y="1045" width="1.0194%" height="15" fill="rgb(238,131,9)" fg:x="56" fg:w="10"/><text x="5.9585%" y="1055.50"></text></g><g><title>web_crawler`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1 samples, 0.10%)</title><rect x="6.6259%" y="1029" width="0.1019%" height="15" fill="rgb(211,50,8)" fg:x="65" fg:w="1"/><text x="6.8759%" y="1039.50"></text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="6.7278%" y="1077" width="0.2039%" height="15" fill="rgb(245,182,24)" fg:x="66" fg:w="2"/><text x="6.9778%" y="1087.50"></text></g><g><title>web_crawler`serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="6.7278%" y="1061" width="0.2039%" height="15" fill="rgb(242,14,37)" fg:x="66" fg:w="2"/><text x="6.9778%" y="1071.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="6.8298%" y="1045" width="0.1019%" height="15" fill="rgb(246,228,12)" fg:x="67" fg:w="1"/><text x="7.0798%" y="1055.50"></text></g><g><title>web_crawler`playwright::imp::core::remote_object::remote_enum::RemoteArc::try_new (31 samples, 3.16%)</title><rect x="3.8736%" y="1141" width="3.1600%" height="15" fill="rgb(213,55,15)" fg:x="38" fg:w="31"/><text x="4.1236%" y="1151.50">web..</text></g><g><title>web_crawler`playwright::imp::response::Response::try_new (25 samples, 2.55%)</title><rect x="4.4852%" y="1125" width="2.5484%" height="15" fill="rgb(209,9,3)" fg:x="44" fg:w="25"/><text x="4.7352%" y="1135.50">we..</text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (16 samples, 1.63%)</title><rect x="5.4027%" y="1109" width="1.6310%" height="15" fill="rgb(230,59,30)" fg:x="53" fg:w="16"/><text x="5.6527%" y="1119.50"></text></g><g><title>web_crawler`serde_json::value::de::visit_object (15 samples, 1.53%)</title><rect x="5.5046%" y="1093" width="1.5291%" height="15" fill="rgb(209,121,21)" fg:x="54" fg:w="15"/><text x="5.7546%" y="1103.50"></text></g><g><title>web_crawler`serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="6.9317%" y="1077" width="0.1019%" height="15" fill="rgb(220,109,13)" fg:x="68" fg:w="1"/><text x="7.1817%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="7.2375%" y="1109" width="0.1019%" height="15" fill="rgb(232,18,1)" fg:x="71" fg:w="1"/><text x="7.4875%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="7.2375%" y="1093" width="0.1019%" height="15" fill="rgb(215,41,42)" fg:x="71" fg:w="1"/><text x="7.4875%" y="1103.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="7.7472%" y="1061" width="0.2039%" height="15" fill="rgb(224,123,36)" fg:x="76" fg:w="2"/><text x="7.9972%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.20%)</title><rect x="7.7472%" y="1045" width="0.2039%" height="15" fill="rgb(240,125,3)" fg:x="76" fg:w="2"/><text x="7.9972%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="7.8491%" y="1029" width="0.1019%" height="15" fill="rgb(205,98,50)" fg:x="77" fg:w="1"/><text x="8.0991%" y="1039.50"></text></g><g><title>web_crawler`playwright::imp::core::connection::Context::dispatch (67 samples, 6.83%)</title><rect x="1.3252%" y="1157" width="6.8298%" height="15" fill="rgb(205,185,37)" fg:x="13" fg:w="67"/><text x="1.5752%" y="1167.50">web_crawl..</text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 1.12%)</title><rect x="7.0336%" y="1141" width="1.1213%" height="15" fill="rgb(238,207,15)" fg:x="69" fg:w="11"/><text x="7.2836%" y="1151.50"></text></g><g><title>web_crawler`serde_json::value::de::visit_object (11 samples, 1.12%)</title><rect x="7.0336%" y="1125" width="1.1213%" height="15" fill="rgb(213,199,42)" fg:x="69" fg:w="11"/><text x="7.2836%" y="1135.50"></text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_any (8 samples, 0.82%)</title><rect x="7.3394%" y="1109" width="0.8155%" height="15" fill="rgb(235,201,11)" fg:x="72" fg:w="8"/><text x="7.5894%" y="1119.50"></text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_any (8 samples, 0.82%)</title><rect x="7.3394%" y="1093" width="0.8155%" height="15" fill="rgb(207,46,11)" fg:x="72" fg:w="8"/><text x="7.5894%" y="1103.50"></text></g><g><title>web_crawler`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_any (6 samples, 0.61%)</title><rect x="7.5433%" y="1077" width="0.6116%" height="15" fill="rgb(241,35,35)" fg:x="74" fg:w="6"/><text x="7.7933%" y="1087.50"></text></g><g><title>web_crawler`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="7.9511%" y="1061" width="0.2039%" height="15" fill="rgb(243,32,47)" fg:x="78" fg:w="2"/><text x="8.2011%" y="1071.50"></text></g><g><title>web_crawler`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="7.9511%" y="1045" width="0.2039%" height="15" fill="rgb(247,202,23)" fg:x="78" fg:w="2"/><text x="8.2011%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.20%)</title><rect x="7.9511%" y="1029" width="0.2039%" height="15" fill="rgb(219,102,11)" fg:x="78" fg:w="2"/><text x="8.2011%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.20%)</title><rect x="7.9511%" y="1013" width="0.2039%" height="15" fill="rgb(243,110,44)" fg:x="78" fg:w="2"/><text x="8.2011%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.10%)</title><rect x="8.0530%" y="997" width="0.1019%" height="15" fill="rgb(222,74,54)" fg:x="79" fg:w="1"/><text x="8.3030%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`read (17 samples, 1.73%)</title><rect x="8.3588%" y="1141" width="1.7329%" height="15" fill="rgb(216,99,12)" fg:x="82" fg:w="17"/><text x="8.6088%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (1 samples, 0.10%)</title><rect x="10.0917%" y="1125" width="0.1019%" height="15" fill="rgb(226,22,26)" fg:x="99" fg:w="1"/><text x="10.3417%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.10%)</title><rect x="10.1937%" y="1093" width="0.1019%" height="15" fill="rgb(217,163,10)" fg:x="100" fg:w="1"/><text x="10.4437%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.10%)</title><rect x="10.1937%" y="1077" width="0.1019%" height="15" fill="rgb(213,25,53)" fg:x="100" fg:w="1"/><text x="10.4437%" y="1087.50"></text></g><g><title>web_crawler`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.31%)</title><rect x="10.0917%" y="1141" width="0.3058%" height="15" fill="rgb(252,105,26)" fg:x="99" fg:w="3"/><text x="10.3417%" y="1151.50"></text></g><g><title>web_crawler`alloc::raw_vec::finish_grow (2 samples, 0.20%)</title><rect x="10.1937%" y="1125" width="0.2039%" height="15" fill="rgb(220,39,43)" fg:x="100" fg:w="2"/><text x="10.4437%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.20%)</title><rect x="10.1937%" y="1109" width="0.2039%" height="15" fill="rgb(229,68,48)" fg:x="100" fg:w="2"/><text x="10.4437%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="10.2956%" y="1093" width="0.1019%" height="15" fill="rgb(252,8,32)" fg:x="101" fg:w="1"/><text x="10.5456%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="10.2956%" y="1077" width="0.1019%" height="15" fill="rgb(223,20,43)" fg:x="101" fg:w="1"/><text x="10.5456%" y="1087.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (3 samples, 0.31%)</title><rect x="10.6014%" y="1093" width="0.3058%" height="15" fill="rgb(229,81,49)" fg:x="104" fg:w="3"/><text x="10.8514%" y="1103.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.10%)</title><rect x="10.9072%" y="1077" width="0.1019%" height="15" fill="rgb(236,28,36)" fg:x="107" fg:w="1"/><text x="11.1572%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="11.0092%" y="1061" width="0.1019%" height="15" fill="rgb(249,185,26)" fg:x="108" fg:w="1"/><text x="11.2592%" y="1071.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.10%)</title><rect x="11.1111%" y="1029" width="0.1019%" height="15" fill="rgb(249,174,33)" fg:x="109" fg:w="1"/><text x="11.3611%" y="1039.50"></text></g><g><title>web_crawler`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="11.1111%" y="1013" width="0.1019%" height="15" fill="rgb(233,201,37)" fg:x="109" fg:w="1"/><text x="11.3611%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="11.1111%" y="997" width="0.1019%" height="15" fill="rgb(221,78,26)" fg:x="109" fg:w="1"/><text x="11.3611%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.10%)</title><rect x="11.3150%" y="965" width="0.1019%" height="15" fill="rgb(250,127,30)" fg:x="111" fg:w="1"/><text x="11.5650%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.10%)</title><rect x="11.4169%" y="965" width="0.1019%" height="15" fill="rgb(230,49,44)" fg:x="112" fg:w="1"/><text x="11.6669%" y="975.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.31%)</title><rect x="11.5189%" y="965" width="0.3058%" height="15" fill="rgb(229,67,23)" fg:x="113" fg:w="3"/><text x="11.7689%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.20%)</title><rect x="11.6208%" y="949" width="0.2039%" height="15" fill="rgb(249,83,47)" fg:x="114" fg:w="2"/><text x="11.8708%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.20%)</title><rect x="11.6208%" y="933" width="0.2039%" height="15" fill="rgb(215,43,3)" fg:x="114" fg:w="2"/><text x="11.8708%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="11.7227%" y="917" width="0.1019%" height="15" fill="rgb(238,154,13)" fg:x="115" fg:w="1"/><text x="11.9727%" y="927.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (2 samples, 0.20%)</title><rect x="11.8247%" y="965" width="0.2039%" height="15" fill="rgb(219,56,2)" fg:x="116" fg:w="2"/><text x="12.0747%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.20%)</title><rect x="11.8247%" y="949" width="0.2039%" height="15" fill="rgb(233,0,4)" fg:x="116" fg:w="2"/><text x="12.0747%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.20%)</title><rect x="11.8247%" y="933" width="0.2039%" height="15" fill="rgb(235,30,7)" fg:x="116" fg:w="2"/><text x="12.0747%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.20%)</title><rect x="11.8247%" y="917" width="0.2039%" height="15" fill="rgb(250,79,13)" fg:x="116" fg:w="2"/><text x="12.0747%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="12.0285%" y="949" width="0.1019%" height="15" fill="rgb(211,146,34)" fg:x="118" fg:w="1"/><text x="12.2785%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.10%)</title><rect x="12.1305%" y="901" width="0.1019%" height="15" fill="rgb(228,22,38)" fg:x="119" fg:w="1"/><text x="12.3805%" y="911.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.20%)</title><rect x="12.1305%" y="949" width="0.2039%" height="15" fill="rgb(235,168,5)" fg:x="119" fg:w="2"/><text x="12.3805%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.20%)</title><rect x="12.1305%" y="933" width="0.2039%" height="15" fill="rgb(221,155,16)" fg:x="119" fg:w="2"/><text x="12.3805%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.20%)</title><rect x="12.1305%" y="917" width="0.2039%" height="15" fill="rgb(215,215,53)" fg:x="119" fg:w="2"/><text x="12.3805%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="12.2324%" y="901" width="0.1019%" height="15" fill="rgb(223,4,10)" fg:x="120" fg:w="1"/><text x="12.4824%" y="911.50"></text></g><g><title>web_crawler`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.41%)</title><rect x="12.0285%" y="965" width="0.4077%" height="15" fill="rgb(234,103,6)" fg:x="118" fg:w="4"/><text x="12.2785%" y="975.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.10%)</title><rect x="12.3344%" y="949" width="0.1019%" height="15" fill="rgb(227,97,0)" fg:x="121" fg:w="1"/><text x="12.5844%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="12.3344%" y="933" width="0.1019%" height="15" fill="rgb(234,150,53)" fg:x="121" fg:w="1"/><text x="12.5844%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="12.3344%" y="917" width="0.1019%" height="15" fill="rgb(228,201,54)" fg:x="121" fg:w="1"/><text x="12.5844%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="12.3344%" y="901" width="0.1019%" height="15" fill="rgb(222,22,37)" fg:x="121" fg:w="1"/><text x="12.5844%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="12.3344%" y="885" width="0.1019%" height="15" fill="rgb(237,53,32)" fg:x="121" fg:w="1"/><text x="12.5844%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.20%)</title><rect x="12.7421%" y="933" width="0.2039%" height="15" fill="rgb(233,25,53)" fg:x="125" fg:w="2"/><text x="12.9921%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.20%)</title><rect x="12.7421%" y="917" width="0.2039%" height="15" fill="rgb(210,40,34)" fg:x="125" fg:w="2"/><text x="12.9921%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.20%)</title><rect x="12.7421%" y="901" width="0.2039%" height="15" fill="rgb(241,220,44)" fg:x="125" fg:w="2"/><text x="12.9921%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="12.8440%" y="885" width="0.1019%" height="15" fill="rgb(235,28,35)" fg:x="126" fg:w="1"/><text x="13.0940%" y="895.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.73%)</title><rect x="11.3150%" y="997" width="1.7329%" height="15" fill="rgb(210,56,17)" fg:x="111" fg:w="17"/><text x="11.5650%" y="1007.50"></text></g><g><title>web_crawler`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.73%)</title><rect x="11.3150%" y="981" width="1.7329%" height="15" fill="rgb(224,130,29)" fg:x="111" fg:w="17"/><text x="11.5650%" y="991.50"></text></g><g><title>web_crawler`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.61%)</title><rect x="12.4363%" y="965" width="0.6116%" height="15" fill="rgb(235,212,8)" fg:x="122" fg:w="6"/><text x="12.6863%" y="975.50"></text></g><g><title>web_crawler`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.61%)</title><rect x="12.4363%" y="949" width="0.6116%" height="15" fill="rgb(223,33,50)" fg:x="122" fg:w="6"/><text x="12.6863%" y="959.50"></text></g><g><title>web_crawler`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.10%)</title><rect x="12.9460%" y="933" width="0.1019%" height="15" fill="rgb(219,149,13)" fg:x="127" fg:w="1"/><text x="13.1960%" y="943.50"></text></g><g><title>web_crawler`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (19 samples, 1.94%)</title><rect x="11.2130%" y="1029" width="1.9368%" height="15" fill="rgb(250,156,29)" fg:x="110" fg:w="19"/><text x="11.4630%" y="1039.50">w..</text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.94%)</title><rect x="11.2130%" y="1013" width="1.9368%" height="15" fill="rgb(216,193,19)" fg:x="110" fg:w="19"/><text x="11.4630%" y="1023.50">w..</text></g><g><title>web_crawler`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="13.0479%" y="997" width="0.1019%" height="15" fill="rgb(216,135,14)" fg:x="128" fg:w="1"/><text x="13.2979%" y="1007.50"></text></g><g><title>web_crawler`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="13.0479%" y="981" width="0.1019%" height="15" fill="rgb(241,47,5)" fg:x="128" fg:w="1"/><text x="13.2979%" y="991.50"></text></g><g><title>web_crawler`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.10%)</title><rect x="13.0479%" y="965" width="0.1019%" height="15" fill="rgb(233,42,35)" fg:x="128" fg:w="1"/><text x="13.2979%" y="975.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (23 samples, 2.34%)</title><rect x="10.9072%" y="1093" width="2.3445%" height="15" fill="rgb(231,13,6)" fg:x="107" fg:w="23"/><text x="11.1572%" y="1103.50">w..</text></g><g><title>web_crawler`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (22 samples, 2.24%)</title><rect x="11.0092%" y="1077" width="2.2426%" height="15" fill="rgb(207,181,40)" fg:x="108" fg:w="22"/><text x="11.2592%" y="1087.50">w..</text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 2.14%)</title><rect x="11.1111%" y="1061" width="2.1407%" height="15" fill="rgb(254,173,49)" fg:x="109" fg:w="21"/><text x="11.3611%" y="1071.50">w..</text></g><g><title>web_crawler`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 2.14%)</title><rect x="11.1111%" y="1045" width="2.1407%" height="15" fill="rgb(221,1,38)" fg:x="109" fg:w="21"/><text x="11.3611%" y="1055.50">w..</text></g><g><title>web_crawler`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="13.1498%" y="1029" width="0.1019%" height="15" fill="rgb(206,124,46)" fg:x="129" fg:w="1"/><text x="13.3998%" y="1039.50"></text></g><g><title>web_crawler`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="13.1498%" y="1013" width="0.1019%" height="15" fill="rgb(249,21,11)" fg:x="129" fg:w="1"/><text x="13.3998%" y="1023.50"></text></g><g><title>web_crawler`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.10%)</title><rect x="13.1498%" y="997" width="0.1019%" height="15" fill="rgb(222,201,40)" fg:x="129" fg:w="1"/><text x="13.3998%" y="1007.50"></text></g><g><title>web_crawler`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="13.2518%" y="1045" width="0.1019%" height="15" fill="rgb(235,61,29)" fg:x="130" fg:w="1"/><text x="13.5018%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.10%)</title><rect x="13.3537%" y="949" width="0.1019%" height="15" fill="rgb(219,207,3)" fg:x="131" fg:w="1"/><text x="13.6037%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.10%)</title><rect x="13.4557%" y="949" width="0.1019%" height="15" fill="rgb(222,56,46)" fg:x="132" fg:w="1"/><text x="13.7057%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="13.4557%" y="933" width="0.1019%" height="15" fill="rgb(239,76,54)" fg:x="132" fg:w="1"/><text x="13.7057%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="13.4557%" y="917" width="0.1019%" height="15" fill="rgb(231,124,27)" fg:x="132" fg:w="1"/><text x="13.7057%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="13.4557%" y="901" width="0.1019%" height="15" fill="rgb(249,195,6)" fg:x="132" fg:w="1"/><text x="13.7057%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.31%)</title><rect x="13.3537%" y="981" width="0.3058%" height="15" fill="rgb(237,174,47)" fg:x="131" fg:w="3"/><text x="13.6037%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.31%)</title><rect x="13.3537%" y="965" width="0.3058%" height="15" fill="rgb(206,201,31)" fg:x="131" fg:w="3"/><text x="13.6037%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="13.5576%" y="949" width="0.1019%" height="15" fill="rgb(231,57,52)" fg:x="133" fg:w="1"/><text x="13.8076%" y="959.50"></text></g><g><title>web_crawler`serde::de::Error::missing_field (5 samples, 0.51%)</title><rect x="13.2518%" y="1093" width="0.5097%" height="15" fill="rgb(248,177,22)" fg:x="130" fg:w="5"/><text x="13.5018%" y="1103.50"></text></g><g><title>web_crawler`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (5 samples, 0.51%)</title><rect x="13.2518%" y="1077" width="0.5097%" height="15" fill="rgb(215,211,37)" fg:x="130" fg:w="5"/><text x="13.5018%" y="1087.50"></text></g><g><title>web_crawler`&lt;core::fmt::Arguments as core::fmt::Display&gt;::fmt (5 samples, 0.51%)</title><rect x="13.2518%" y="1061" width="0.5097%" height="15" fill="rgb(241,128,51)" fg:x="130" fg:w="5"/><text x="13.5018%" y="1071.50"></text></g><g><title>web_crawler`core::fmt::write (4 samples, 0.41%)</title><rect x="13.3537%" y="1045" width="0.4077%" height="15" fill="rgb(227,165,31)" fg:x="131" fg:w="4"/><text x="13.6037%" y="1055.50"></text></g><g><title>web_crawler`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.41%)</title><rect x="13.3537%" y="1029" width="0.4077%" height="15" fill="rgb(228,167,24)" fg:x="131" fg:w="4"/><text x="13.6037%" y="1039.50"></text></g><g><title>web_crawler`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.41%)</title><rect x="13.3537%" y="1013" width="0.4077%" height="15" fill="rgb(228,143,12)" fg:x="131" fg:w="4"/><text x="13.6037%" y="1023.50"></text></g><g><title>web_crawler`alloc::raw_vec::finish_grow (4 samples, 0.41%)</title><rect x="13.3537%" y="997" width="0.4077%" height="15" fill="rgb(249,149,8)" fg:x="131" fg:w="4"/><text x="13.6037%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="13.6595%" y="981" width="0.1019%" height="15" fill="rgb(243,35,44)" fg:x="134" fg:w="1"/><text x="13.9095%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="13.6595%" y="965" width="0.1019%" height="15" fill="rgb(246,89,9)" fg:x="134" fg:w="1"/><text x="13.9095%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="13.6595%" y="949" width="0.1019%" height="15" fill="rgb(233,213,13)" fg:x="134" fg:w="1"/><text x="13.9095%" y="959.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (33 samples, 3.36%)</title><rect x="10.4995%" y="1109" width="3.3639%" height="15" fill="rgb(233,141,41)" fg:x="103" fg:w="33"/><text x="10.7495%" y="1119.50">web..</text></g><g><title>web_crawler`strong::impl_serde::_&lt;impl serde::de::Deserialize for strong::buf::imp::StrongBuf&lt;Ctx&gt;&gt;::deserialize (1 samples, 0.10%)</title><rect x="13.7615%" y="1093" width="0.1019%" height="15" fill="rgb(239,167,4)" fg:x="135" fg:w="1"/><text x="14.0115%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="13.7615%" y="1077" width="0.1019%" height="15" fill="rgb(209,217,16)" fg:x="135" fg:w="1"/><text x="14.0115%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="13.8634%" y="1077" width="0.1019%" height="15" fill="rgb(219,88,35)" fg:x="136" fg:w="1"/><text x="14.1134%" y="1087.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.20%)</title><rect x="13.8634%" y="1109" width="0.2039%" height="15" fill="rgb(220,193,23)" fg:x="136" fg:w="2"/><text x="14.1134%" y="1119.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.20%)</title><rect x="13.8634%" y="1093" width="0.2039%" height="15" fill="rgb(230,90,52)" fg:x="136" fg:w="2"/><text x="14.1134%" y="1103.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.10%)</title><rect x="13.9653%" y="1077" width="0.1019%" height="15" fill="rgb(252,106,19)" fg:x="137" fg:w="1"/><text x="14.2153%" y="1087.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.10%)</title><rect x="13.9653%" y="1061" width="0.1019%" height="15" fill="rgb(206,74,20)" fg:x="137" fg:w="1"/><text x="14.2153%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="13.9653%" y="1045" width="0.1019%" height="15" fill="rgb(230,138,44)" fg:x="137" fg:w="1"/><text x="14.2153%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="13.9653%" y="1029" width="0.1019%" height="15" fill="rgb(235,182,43)" fg:x="137" fg:w="1"/><text x="14.2153%" y="1039.50"></text></g><g><title>web_crawler`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.10%)</title><rect x="14.0673%" y="1077" width="0.1019%" height="15" fill="rgb(242,16,51)" fg:x="138" fg:w="1"/><text x="14.3173%" y="1087.50"></text></g><g><title>web_crawler`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="14.1692%" y="1077" width="0.1019%" height="15" fill="rgb(248,9,4)" fg:x="139" fg:w="1"/><text x="14.4192%" y="1087.50"></text></g><g><title>web_crawler`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="14.1692%" y="1061" width="0.1019%" height="15" fill="rgb(210,31,22)" fg:x="139" fg:w="1"/><text x="14.4192%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="14.1692%" y="1045" width="0.1019%" height="15" fill="rgb(239,54,39)" fg:x="139" fg:w="1"/><text x="14.4192%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="14.1692%" y="1029" width="0.1019%" height="15" fill="rgb(230,99,41)" fg:x="139" fg:w="1"/><text x="14.4192%" y="1039.50"></text></g><g><title>web_crawler`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="14.2712%" y="1045" width="0.1019%" height="15" fill="rgb(253,106,12)" fg:x="140" fg:w="1"/><text x="14.5212%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.10%)</title><rect x="14.3731%" y="981" width="0.1019%" height="15" fill="rgb(213,46,41)" fg:x="141" fg:w="1"/><text x="14.6231%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.10%)</title><rect x="14.3731%" y="965" width="0.1019%" height="15" fill="rgb(215,133,35)" fg:x="141" fg:w="1"/><text x="14.6231%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.10%)</title><rect x="14.3731%" y="949" width="0.1019%" height="15" fill="rgb(213,28,5)" fg:x="141" fg:w="1"/><text x="14.6231%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="14.3731%" y="933" width="0.1019%" height="15" fill="rgb(215,77,49)" fg:x="141" fg:w="1"/><text x="14.6231%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="14.3731%" y="917" width="0.1019%" height="15" fill="rgb(248,100,22)" fg:x="141" fg:w="1"/><text x="14.6231%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="14.3731%" y="901" width="0.1019%" height="15" fill="rgb(208,67,9)" fg:x="141" fg:w="1"/><text x="14.6231%" y="911.50"></text></g><g><title>web_crawler`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.31%)</title><rect x="14.3731%" y="1013" width="0.3058%" height="15" fill="rgb(219,133,21)" fg:x="141" fg:w="3"/><text x="14.6231%" y="1023.50"></text></g><g><title>web_crawler`alloc::raw_vec::finish_grow (3 samples, 0.31%)</title><rect x="14.3731%" y="997" width="0.3058%" height="15" fill="rgb(246,46,29)" fg:x="141" fg:w="3"/><text x="14.6231%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.20%)</title><rect x="14.4750%" y="981" width="0.2039%" height="15" fill="rgb(246,185,52)" fg:x="142" fg:w="2"/><text x="14.7250%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.20%)</title><rect x="14.4750%" y="965" width="0.2039%" height="15" fill="rgb(252,136,11)" fg:x="142" fg:w="2"/><text x="14.7250%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="14.5770%" y="949" width="0.1019%" height="15" fill="rgb(219,138,53)" fg:x="143" fg:w="1"/><text x="14.8270%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="14.5770%" y="933" width="0.1019%" height="15" fill="rgb(211,51,23)" fg:x="143" fg:w="1"/><text x="14.8270%" y="943.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="14.7808%" y="997" width="0.1019%" height="15" fill="rgb(247,221,28)" fg:x="145" fg:w="1"/><text x="15.0308%" y="1007.50"></text></g><g><title>web_crawler`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.41%)</title><rect x="15.2905%" y="933" width="0.4077%" height="15" fill="rgb(251,222,45)" fg:x="150" fg:w="4"/><text x="15.5405%" y="943.50"></text></g><g><title>web_crawler`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.31%)</title><rect x="15.3925%" y="917" width="0.3058%" height="15" fill="rgb(217,162,53)" fg:x="151" fg:w="3"/><text x="15.6425%" y="927.50"></text></g><g><title>web_crawler`core::str::converts::from_utf8 (2 samples, 0.20%)</title><rect x="15.4944%" y="901" width="0.2039%" height="15" fill="rgb(229,93,14)" fg:x="152" fg:w="2"/><text x="15.7444%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.20%)</title><rect x="15.8002%" y="917" width="0.2039%" height="15" fill="rgb(209,67,49)" fg:x="155" fg:w="2"/><text x="16.0502%" y="927.50"></text></g><g><title>web_crawler`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="16.3099%" y="901" width="0.1019%" height="15" fill="rgb(213,87,29)" fg:x="160" fg:w="1"/><text x="16.5599%" y="911.50"></text></g><g><title>web_crawler`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="16.3099%" y="885" width="0.1019%" height="15" fill="rgb(205,151,52)" fg:x="160" fg:w="1"/><text x="16.5599%" y="895.50"></text></g><g><title>web_crawler`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (16 samples, 1.63%)</title><rect x="14.8828%" y="981" width="1.6310%" height="15" fill="rgb(253,215,39)" fg:x="146" fg:w="16"/><text x="15.1328%" y="991.50"></text></g><g><title>web_crawler`serde::de::Deserializer::__deserialize_content (16 samples, 1.63%)</title><rect x="14.8828%" y="965" width="1.6310%" height="15" fill="rgb(221,220,41)" fg:x="146" fg:w="16"/><text x="15.1328%" y="975.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.63%)</title><rect x="14.8828%" y="949" width="1.6310%" height="15" fill="rgb(218,133,21)" fg:x="146" fg:w="16"/><text x="15.1328%" y="959.50"></text></g><g><title>web_crawler`serde::de::Deserializer::__deserialize_content (8 samples, 0.82%)</title><rect x="15.6983%" y="933" width="0.8155%" height="15" fill="rgb(221,193,43)" fg:x="154" fg:w="8"/><text x="15.9483%" y="943.50"></text></g><g><title>web_crawler`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (5 samples, 0.51%)</title><rect x="16.0041%" y="917" width="0.5097%" height="15" fill="rgb(240,128,52)" fg:x="157" fg:w="5"/><text x="16.2541%" y="927.50"></text></g><g><title>web_crawler`core::str::converts::from_utf8 (1 samples, 0.10%)</title><rect x="16.4118%" y="901" width="0.1019%" height="15" fill="rgb(253,114,12)" fg:x="161" fg:w="1"/><text x="16.6618%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="16.5138%" y="901" width="0.1019%" height="15" fill="rgb(215,223,47)" fg:x="162" fg:w="1"/><text x="16.7638%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="16.5138%" y="885" width="0.1019%" height="15" fill="rgb(248,225,23)" fg:x="162" fg:w="1"/><text x="16.7638%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="16.5138%" y="869" width="0.1019%" height="15" fill="rgb(250,108,0)" fg:x="162" fg:w="1"/><text x="16.7638%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.20%)</title><rect x="16.5138%" y="917" width="0.2039%" height="15" fill="rgb(228,208,7)" fg:x="162" fg:w="2"/><text x="16.7638%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="16.6157%" y="901" width="0.1019%" height="15" fill="rgb(244,45,10)" fg:x="163" fg:w="1"/><text x="16.8657%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="16.6157%" y="885" width="0.1019%" height="15" fill="rgb(207,125,25)" fg:x="163" fg:w="1"/><text x="16.8657%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="16.6157%" y="869" width="0.1019%" height="15" fill="rgb(210,195,18)" fg:x="163" fg:w="1"/><text x="16.8657%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (1 samples, 0.10%)</title><rect x="16.7176%" y="917" width="0.1019%" height="15" fill="rgb(249,80,12)" fg:x="164" fg:w="1"/><text x="16.9676%" y="927.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (20 samples, 2.04%)</title><rect x="14.8828%" y="997" width="2.0387%" height="15" fill="rgb(221,65,9)" fg:x="146" fg:w="20"/><text x="15.1328%" y="1007.50">w..</text></g><g><title>web_crawler`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.41%)</title><rect x="16.5138%" y="981" width="0.4077%" height="15" fill="rgb(235,49,36)" fg:x="162" fg:w="4"/><text x="16.7638%" y="991.50"></text></g><g><title>web_crawler`alloc::raw_vec::finish_grow (4 samples, 0.41%)</title><rect x="16.5138%" y="965" width="0.4077%" height="15" fill="rgb(225,32,20)" fg:x="162" fg:w="4"/><text x="16.7638%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.41%)</title><rect x="16.5138%" y="949" width="0.4077%" height="15" fill="rgb(215,141,46)" fg:x="162" fg:w="4"/><text x="16.7638%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.41%)</title><rect x="16.5138%" y="933" width="0.4077%" height="15" fill="rgb(250,160,47)" fg:x="162" fg:w="4"/><text x="16.7638%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="16.8196%" y="917" width="0.1019%" height="15" fill="rgb(216,222,40)" fg:x="165" fg:w="1"/><text x="17.0696%" y="927.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (26 samples, 2.65%)</title><rect x="14.3731%" y="1029" width="2.6504%" height="15" fill="rgb(234,217,39)" fg:x="141" fg:w="26"/><text x="14.6231%" y="1039.50">we..</text></g><g><title>web_crawler`serde::de::Deserializer::__deserialize_content (23 samples, 2.34%)</title><rect x="14.6789%" y="1013" width="2.3445%" height="15" fill="rgb(207,178,40)" fg:x="144" fg:w="23"/><text x="14.9289%" y="1023.50">w..</text></g><g><title>web_crawler`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.10%)</title><rect x="16.9215%" y="997" width="0.1019%" height="15" fill="rgb(221,136,13)" fg:x="166" fg:w="1"/><text x="17.1715%" y="1007.50"></text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 3.16%)</title><rect x="14.0673%" y="1093" width="3.1600%" height="15" fill="rgb(249,199,10)" fg:x="138" fg:w="31"/><text x="14.3173%" y="1103.50">web..</text></g><g><title>web_crawler`serde::de::Deserializer::__deserialize_content (29 samples, 2.96%)</title><rect x="14.2712%" y="1077" width="2.9562%" height="15" fill="rgb(249,222,13)" fg:x="140" fg:w="29"/><text x="14.5212%" y="1087.50">web..</text></g><g><title>web_crawler`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.96%)</title><rect x="14.2712%" y="1061" width="2.9562%" height="15" fill="rgb(244,185,38)" fg:x="140" fg:w="29"/><text x="14.5212%" y="1071.50">web..</text></g><g><title>web_crawler`serde::de::Deserializer::__deserialize_content (28 samples, 2.85%)</title><rect x="14.3731%" y="1045" width="2.8542%" height="15" fill="rgb(236,202,9)" fg:x="141" fg:w="28"/><text x="14.6231%" y="1055.50">we..</text></g><g><title>web_crawler`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.20%)</title><rect x="17.0234%" y="1029" width="0.2039%" height="15" fill="rgb(250,229,37)" fg:x="167" fg:w="2"/><text x="17.2734%" y="1039.50"></text></g><g><title>web_crawler`serde::de::Deserializer::__deserialize_content (32 samples, 3.26%)</title><rect x="14.0673%" y="1109" width="3.2620%" height="15" fill="rgb(206,174,23)" fg:x="138" fg:w="32"/><text x="14.3173%" y="1119.50">web..</text></g><g><title>web_crawler`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="17.2273%" y="1093" width="0.1019%" height="15" fill="rgb(211,33,43)" fg:x="169" fg:w="1"/><text x="17.4773%" y="1103.50"></text></g><g><title>web_crawler`playwright::imp::core::transport::Reader::try_read (91 samples, 9.28%)</title><rect x="8.1549%" y="1157" width="9.2762%" height="15" fill="rgb(245,58,50)" fg:x="80" fg:w="91"/><text x="8.4049%" y="1167.50">web_crawler`p..</text></g><g><title>web_crawler`serde_json::de::from_slice (69 samples, 7.03%)</title><rect x="10.3976%" y="1141" width="7.0336%" height="15" fill="rgb(244,68,36)" fg:x="102" fg:w="69"/><text x="10.6476%" y="1151.50">web_crawl..</text></g><g><title>web_crawler`playwright::imp::core::message::_::_&lt;impl serde::de::Deserialize for playwright::imp::core::message::Res&gt;::deserialize (69 samples, 7.03%)</title><rect x="10.3976%" y="1125" width="7.0336%" height="15" fill="rgb(232,229,15)" fg:x="102" fg:w="69"/><text x="10.6476%" y="1135.50">web_crawl..</text></g><g><title>web_crawler`serde::de::Error::missing_field (1 samples, 0.10%)</title><rect x="17.3293%" y="1109" width="0.1019%" height="15" fill="rgb(254,30,23)" fg:x="170" fg:w="1"/><text x="17.5793%" y="1119.50"></text></g><g><title>Network`nw_path_create_evaluator_for_endpoint_no_evaluate (1 samples, 0.10%)</title><rect x="17.4312%" y="981" width="0.1019%" height="15" fill="rgb(235,160,14)" fg:x="171" fg:w="1"/><text x="17.6812%" y="991.50"></text></g><g><title>Network`-[NWConcrete_nw_parameters initWithStack:] (1 samples, 0.10%)</title><rect x="17.4312%" y="965" width="0.1019%" height="15" fill="rgb(212,155,44)" fg:x="171" fg:w="1"/><text x="17.6812%" y="975.50"></text></g><g><title>Network`networkd_settings_init (1 samples, 0.10%)</title><rect x="17.4312%" y="949" width="0.1019%" height="15" fill="rgb(226,2,50)" fg:x="171" fg:w="1"/><text x="17.6812%" y="959.50"></text></g><g><title>Network`networkd_settings_read_from_file() (1 samples, 0.10%)</title><rect x="17.4312%" y="933" width="0.1019%" height="15" fill="rgb(234,177,6)" fg:x="171" fg:w="1"/><text x="17.6812%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.10%)</title><rect x="17.4312%" y="917" width="0.1019%" height="15" fill="rgb(217,24,9)" fg:x="171" fg:w="1"/><text x="17.6812%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.10%)</title><rect x="17.4312%" y="901" width="0.1019%" height="15" fill="rgb(220,13,46)" fg:x="171" fg:w="1"/><text x="17.6812%" y="911.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.10%)</title><rect x="17.4312%" y="885" width="0.1019%" height="15" fill="rgb(239,221,27)" fg:x="171" fg:w="1"/><text x="17.6812%" y="895.50"></text></g><g><title>Network`nwlog_legacy_init_once() (1 samples, 0.10%)</title><rect x="17.4312%" y="869" width="0.1019%" height="15" fill="rgb(222,198,25)" fg:x="171" fg:w="1"/><text x="17.6812%" y="879.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (1 samples, 0.10%)</title><rect x="17.4312%" y="853" width="0.1019%" height="15" fill="rgb(211,99,13)" fg:x="171" fg:w="1"/><text x="17.6812%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.10%)</title><rect x="17.4312%" y="837" width="0.1019%" height="15" fill="rgb(232,111,31)" fg:x="171" fg:w="1"/><text x="17.6812%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.10%)</title><rect x="17.4312%" y="821" width="0.1019%" height="15" fill="rgb(245,82,37)" fg:x="171" fg:w="1"/><text x="17.6812%" y="831.50"></text></g><g><title>libsystem_trace.dylib`_os_trace_init_slow (1 samples, 0.10%)</title><rect x="17.4312%" y="805" width="0.1019%" height="15" fill="rgb(227,149,46)" fg:x="171" fg:w="1"/><text x="17.6812%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.10%)</title><rect x="17.4312%" y="789" width="0.1019%" height="15" fill="rgb(218,36,50)" fg:x="171" fg:w="1"/><text x="17.6812%" y="799.50"></text></g><g><title>Network`nw_path_evaluator_evaluate (1 samples, 0.10%)</title><rect x="17.5331%" y="981" width="0.1019%" height="15" fill="rgb(226,80,48)" fg:x="172" fg:w="1"/><text x="17.7831%" y="991.50"></text></g><g><title>Network`nw_path_snapshot_path (1 samples, 0.10%)</title><rect x="17.5331%" y="965" width="0.1019%" height="15" fill="rgb(238,224,15)" fg:x="172" fg:w="1"/><text x="17.7831%" y="975.50"></text></g><g><title>Network`nw_path_copy_interface_with_generation (1 samples, 0.10%)</title><rect x="17.5331%" y="949" width="0.1019%" height="15" fill="rgb(241,136,10)" fg:x="172" fg:w="1"/><text x="17.7831%" y="959.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.10%)</title><rect x="17.5331%" y="933" width="0.1019%" height="15" fill="rgb(208,32,45)" fg:x="172" fg:w="1"/><text x="17.7831%" y="943.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.10%)</title><rect x="17.5331%" y="917" width="0.1019%" height="15" fill="rgb(207,135,9)" fg:x="172" fg:w="1"/><text x="17.7831%" y="927.50"></text></g><g><title>libsystem_info.dylib`_gai_nat64_second_pass (5 samples, 0.51%)</title><rect x="17.4312%" y="1029" width="0.5097%" height="15" fill="rgb(206,86,44)" fg:x="171" fg:w="5"/><text x="17.6812%" y="1039.50"></text></g><g><title>Network`nw_nat64_v4_address_requires_synthesis (5 samples, 0.51%)</title><rect x="17.4312%" y="1013" width="0.5097%" height="15" fill="rgb(245,177,15)" fg:x="171" fg:w="5"/><text x="17.6812%" y="1023.50"></text></g><g><title>Network`nw_path_create_evaluator_for_endpoint (5 samples, 0.51%)</title><rect x="17.4312%" y="997" width="0.5097%" height="15" fill="rgb(206,64,50)" fg:x="171" fg:w="5"/><text x="17.6812%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`necp_client_action (3 samples, 0.31%)</title><rect x="17.6351%" y="981" width="0.3058%" height="15" fill="rgb(234,36,40)" fg:x="173" fg:w="3"/><text x="17.8851%" y="991.50"></text></g><g><title>libsystem_info.dylib`_gai_sort_list (1 samples, 0.10%)</title><rect x="17.9409%" y="1029" width="0.1019%" height="15" fill="rgb(213,64,8)" fg:x="176" fg:w="1"/><text x="18.1909%" y="1039.50"></text></g><g><title>libsystem_c.dylib`_isort (1 samples, 0.10%)</title><rect x="17.9409%" y="1013" width="0.1019%" height="15" fill="rgb(210,75,36)" fg:x="176" fg:w="1"/><text x="18.1909%" y="1023.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare (1 samples, 0.10%)</title><rect x="17.9409%" y="997" width="0.1019%" height="15" fill="rgb(229,88,21)" fg:x="176" fg:w="1"/><text x="18.1909%" y="1007.50"></text></g><g><title>libsystem_info.dylib`si_destination_lookup (1 samples, 0.10%)</title><rect x="17.9409%" y="981" width="0.1019%" height="15" fill="rgb(252,204,47)" fg:x="176" fg:w="1"/><text x="18.1909%" y="991.50"></text></g><g><title>libsystem_info.dylib`_mdns_search_ex (1 samples, 0.10%)</title><rect x="18.0428%" y="997" width="0.1019%" height="15" fill="rgb(208,77,27)" fg:x="177" fg:w="1"/><text x="18.2928%" y="1007.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_start (1 samples, 0.10%)</title><rect x="18.0428%" y="981" width="0.1019%" height="15" fill="rgb(221,76,26)" fg:x="177" fg:w="1"/><text x="18.2928%" y="991.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceQueryRecordInternal (1 samples, 0.10%)</title><rect x="18.0428%" y="965" width="0.1019%" height="15" fill="rgb(225,139,18)" fg:x="177" fg:w="1"/><text x="18.2928%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__sendmsg_nocancel (1 samples, 0.10%)</title><rect x="18.0428%" y="949" width="0.1019%" height="15" fill="rgb(230,137,11)" fg:x="177" fg:w="1"/><text x="18.2928%" y="959.50"></text></g><g><title>web_crawler`tokio::runtime::blocking::pool::Inner::run (8 samples, 0.82%)</title><rect x="17.4312%" y="1157" width="0.8155%" height="15" fill="rgb(212,28,1)" fg:x="171" fg:w="8"/><text x="17.6812%" y="1167.50"></text></g><g><title>web_crawler`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (8 samples, 0.82%)</title><rect x="17.4312%" y="1141" width="0.8155%" height="15" fill="rgb(248,164,17)" fg:x="171" fg:w="8"/><text x="17.6812%" y="1151.50"></text></g><g><title>web_crawler`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (8 samples, 0.82%)</title><rect x="17.4312%" y="1125" width="0.8155%" height="15" fill="rgb(222,171,42)" fg:x="171" fg:w="8"/><text x="17.6812%" y="1135.50"></text></g><g><title>web_crawler`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.82%)</title><rect x="17.4312%" y="1109" width="0.8155%" height="15" fill="rgb(243,84,45)" fg:x="171" fg:w="8"/><text x="17.6812%" y="1119.50"></text></g><g><title>web_crawler`&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (8 samples, 0.82%)</title><rect x="17.4312%" y="1093" width="0.8155%" height="15" fill="rgb(252,49,23)" fg:x="171" fg:w="8"/><text x="17.6812%" y="1103.50"></text></g><g><title>web_crawler`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::_{{closure}} (8 samples, 0.82%)</title><rect x="17.4312%" y="1077" width="0.8155%" height="15" fill="rgb(215,19,7)" fg:x="171" fg:w="8"/><text x="17.6812%" y="1087.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (8 samples, 0.82%)</title><rect x="17.4312%" y="1061" width="0.8155%" height="15" fill="rgb(238,81,41)" fg:x="171" fg:w="8"/><text x="17.6812%" y="1071.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (8 samples, 0.82%)</title><rect x="17.4312%" y="1045" width="0.8155%" height="15" fill="rgb(210,199,37)" fg:x="171" fg:w="8"/><text x="17.6812%" y="1055.50"></text></g><g><title>libsystem_info.dylib`search_addrinfo (2 samples, 0.20%)</title><rect x="18.0428%" y="1029" width="0.2039%" height="15" fill="rgb(244,192,49)" fg:x="177" fg:w="2"/><text x="18.2928%" y="1039.50"></text></g><g><title>libsystem_info.dylib`mdns_addrinfo (2 samples, 0.20%)</title><rect x="18.0428%" y="1013" width="0.2039%" height="15" fill="rgb(226,211,11)" fg:x="177" fg:w="2"/><text x="18.2928%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.10%)</title><rect x="18.1448%" y="997" width="0.1019%" height="15" fill="rgb(236,162,54)" fg:x="178" fg:w="1"/><text x="18.3948%" y="1007.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.10%)</title><rect x="18.8583%" y="1109" width="0.1019%" height="15" fill="rgb(220,229,9)" fg:x="185" fg:w="1"/><text x="19.1083%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="18.9602%" y="1109" width="0.1019%" height="15" fill="rgb(250,87,22)" fg:x="186" fg:w="1"/><text x="19.2102%" y="1119.50"></text></g><g><title>web_crawler`DYLD-STUB$$memcpy (1 samples, 0.10%)</title><rect x="19.0622%" y="1109" width="0.1019%" height="15" fill="rgb(239,43,17)" fg:x="187" fg:w="1"/><text x="19.3122%" y="1119.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.41%)</title><rect x="19.3680%" y="1061" width="0.4077%" height="15" fill="rgb(231,177,25)" fg:x="190" fg:w="4"/><text x="19.6180%" y="1071.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.10%)</title><rect x="19.7757%" y="1029" width="0.1019%" height="15" fill="rgb(219,179,1)" fg:x="194" fg:w="1"/><text x="20.0257%" y="1039.50"></text></g><g><title>web_crawler`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="19.8777%" y="1029" width="0.1019%" height="15" fill="rgb(238,219,53)" fg:x="195" fg:w="1"/><text x="20.1277%" y="1039.50"></text></g><g><title>web_crawler`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.10%)</title><rect x="19.8777%" y="1013" width="0.1019%" height="15" fill="rgb(232,167,36)" fg:x="195" fg:w="1"/><text x="20.1277%" y="1023.50"></text></g><g><title>web_crawler`&lt;actix_rt::arbiter::ArbiterRunner as core::future::future::Future&gt;::poll (3 samples, 0.31%)</title><rect x="19.7757%" y="1061" width="0.3058%" height="15" fill="rgb(244,19,51)" fg:x="194" fg:w="3"/><text x="20.0257%" y="1071.50"></text></g><g><title>web_crawler`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (3 samples, 0.31%)</title><rect x="19.7757%" y="1045" width="0.3058%" height="15" fill="rgb(224,6,22)" fg:x="194" fg:w="3"/><text x="20.0257%" y="1055.50"></text></g><g><title>web_crawler`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.10%)</title><rect x="19.9796%" y="1029" width="0.1019%" height="15" fill="rgb(224,145,5)" fg:x="196" fg:w="1"/><text x="20.2296%" y="1039.50"></text></g><g><title>web_crawler`tokio::runtime::driver::Handle::unpark (29 samples, 2.96%)</title><rect x="20.0815%" y="1061" width="2.9562%" height="15" fill="rgb(234,130,49)" fg:x="197" fg:w="29"/><text x="20.3315%" y="1071.50">web..</text></g><g><title>libsystem_kernel.dylib`kevent (29 samples, 2.96%)</title><rect x="20.0815%" y="1045" width="2.9562%" height="15" fill="rgb(254,6,2)" fg:x="197" fg:w="29"/><text x="20.3315%" y="1055.50">lib..</text></g><g><title>web_crawler`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="23.0377%" y="1061" width="0.1019%" height="15" fill="rgb(208,96,46)" fg:x="226" fg:w="1"/><text x="23.2877%" y="1071.50"></text></g><g><title>web_crawler`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.10%)</title><rect x="23.1397%" y="1061" width="0.1019%" height="15" fill="rgb(239,3,39)" fg:x="227" fg:w="1"/><text x="23.3897%" y="1071.50"></text></g><g><title>web_crawler`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.10%)</title><rect x="23.8532%" y="1045" width="0.1019%" height="15" fill="rgb(233,210,1)" fg:x="234" fg:w="1"/><text x="24.1032%" y="1055.50"></text></g><g><title>web_crawler`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="25.2803%" y="1029" width="0.1019%" height="15" fill="rgb(244,137,37)" fg:x="248" fg:w="1"/><text x="25.5303%" y="1039.50"></text></g><g><title>web_crawler`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.31%)</title><rect x="25.3823%" y="1029" width="0.3058%" height="15" fill="rgb(240,136,2)" fg:x="249" fg:w="3"/><text x="25.6323%" y="1039.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 1.73%)</title><rect x="28.3384%" y="997" width="1.7329%" height="15" fill="rgb(239,18,37)" fg:x="278" fg:w="17"/><text x="28.5884%" y="1007.50"></text></g><g><title>web_crawler`&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="30.0714%" y="997" width="0.1019%" height="15" fill="rgb(218,185,22)" fg:x="295" fg:w="1"/><text x="30.3214%" y="1007.50"></text></g><g><title>web_crawler`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (1 samples, 0.10%)</title><rect x="30.0714%" y="981" width="0.1019%" height="15" fill="rgb(225,218,4)" fg:x="295" fg:w="1"/><text x="30.3214%" y="991.50"></text></g><g><title>web_crawler`actix_web::handler::handler_service::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="30.0714%" y="965" width="0.1019%" height="15" fill="rgb(230,182,32)" fg:x="295" fg:w="1"/><text x="30.3214%" y="975.50"></text></g><g><title>web_crawler`&lt;actix_server::service::StreamNewService&lt;F,Io&gt; as actix_server::service::InternalServiceFactory&gt;::create (1 samples, 0.10%)</title><rect x="30.1733%" y="997" width="0.1019%" height="15" fill="rgb(242,56,43)" fg:x="296" fg:w="1"/><text x="30.4233%" y="1007.50"></text></g><g><title>web_crawler`&lt;F as actix_server::service::ServerServiceFactory&lt;I&gt;&gt;::create (1 samples, 0.10%)</title><rect x="30.1733%" y="981" width="0.1019%" height="15" fill="rgb(233,99,24)" fg:x="296" fg:w="1"/><text x="30.4233%" y="991.50"></text></g><g><title>web_crawler`actix_http::config::ServiceConfig::new (1 samples, 0.10%)</title><rect x="30.1733%" y="965" width="0.1019%" height="15" fill="rgb(234,209,42)" fg:x="296" fg:w="1"/><text x="30.4233%" y="975.50"></text></g><g><title>web_crawler`tokio::task::local::spawn_local (1 samples, 0.10%)</title><rect x="30.1733%" y="949" width="0.1019%" height="15" fill="rgb(227,7,12)" fg:x="296" fg:w="1"/><text x="30.4233%" y="959.50"></text></g><g><title>web_crawler`tokio::runtime::task::list::LocalOwnedTasks&lt;S&gt;::bind (1 samples, 0.10%)</title><rect x="30.1733%" y="933" width="0.1019%" height="15" fill="rgb(245,203,43)" fg:x="296" fg:w="1"/><text x="30.4233%" y="943.50"></text></g><g><title>web_crawler`tokio::runtime::task::core::Header::get_trailer (1 samples, 0.10%)</title><rect x="30.1733%" y="917" width="0.1019%" height="15" fill="rgb(238,205,33)" fg:x="296" fg:w="1"/><text x="30.4233%" y="927.50"></text></g><g><title>web_crawler`&lt;scraper::html::Select as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="30.2752%" y="997" width="0.1019%" height="15" fill="rgb(231,56,7)" fg:x="297" fg:w="1"/><text x="30.5252%" y="1007.50"></text></g><g><title>web_crawler`&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="30.3772%" y="997" width="0.1019%" height="15" fill="rgb(244,186,29)" fg:x="298" fg:w="1"/><text x="30.6272%" y="1007.50"></text></g><g><title>web_crawler`html5ever::driver::parse_document (1 samples, 0.10%)</title><rect x="30.4791%" y="997" width="0.1019%" height="15" fill="rgb(234,111,31)" fg:x="299" fg:w="1"/><text x="30.7291%" y="1007.50"></text></g><g><title>web_crawler`DYLD-STUB$$memcpy (1 samples, 0.10%)</title><rect x="30.5810%" y="933" width="0.1019%" height="15" fill="rgb(241,149,10)" fg:x="300" fg:w="1"/><text x="30.8310%" y="943.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::emit_current_tag (1 samples, 0.10%)</title><rect x="30.6830%" y="933" width="0.1019%" height="15" fill="rgb(249,206,44)" fg:x="301" fg:w="1"/><text x="30.9330%" y="943.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_token (1 samples, 0.10%)</title><rect x="30.6830%" y="917" width="0.1019%" height="15" fill="rgb(251,153,30)" fg:x="301" fg:w="1"/><text x="30.9330%" y="927.50"></text></g><g><title>web_crawler`&lt;html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt; as html5ever::tokenizer::interface::TokenSink&gt;::process_token (1 samples, 0.10%)</title><rect x="30.6830%" y="901" width="0.1019%" height="15" fill="rgb(239,152,38)" fg:x="301" fg:w="1"/><text x="30.9330%" y="911.50"></text></g><g><title>web_crawler`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (1 samples, 0.10%)</title><rect x="30.6830%" y="885" width="0.1019%" height="15" fill="rgb(249,139,47)" fg:x="301" fg:w="1"/><text x="30.9330%" y="895.50"></text></g><g><title>web_crawler`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element (1 samples, 0.10%)</title><rect x="30.6830%" y="869" width="0.1019%" height="15" fill="rgb(244,64,35)" fg:x="301" fg:w="1"/><text x="30.9330%" y="879.50"></text></g><g><title>web_crawler`markup5ever::interface::tree_builder::create_element (1 samples, 0.10%)</title><rect x="30.6830%" y="853" width="0.1019%" height="15" fill="rgb(216,46,15)" fg:x="301" fg:w="1"/><text x="30.9330%" y="863.50"></text></g><g><title>web_crawler`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (1 samples, 0.10%)</title><rect x="30.6830%" y="837" width="0.1019%" height="15" fill="rgb(250,74,19)" fg:x="301" fg:w="1"/><text x="30.9330%" y="847.50"></text></g><g><title>web_crawler`scraper::node::Element::new (1 samples, 0.10%)</title><rect x="30.6830%" y="821" width="0.1019%" height="15" fill="rgb(249,42,33)" fg:x="301" fg:w="1"/><text x="30.9330%" y="831.50"></text></g><g><title>web_crawler`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="30.6830%" y="805" width="0.1019%" height="15" fill="rgb(242,149,17)" fg:x="301" fg:w="1"/><text x="30.9330%" y="815.50"></text></g><g><title>web_crawler`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="30.6830%" y="789" width="0.1019%" height="15" fill="rgb(244,29,21)" fg:x="301" fg:w="1"/><text x="30.9330%" y="799.50"></text></g><g><title>web_crawler`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="30.6830%" y="773" width="0.1019%" height="15" fill="rgb(220,130,37)" fg:x="301" fg:w="1"/><text x="30.9330%" y="783.50"></text></g><g><title>web_crawler`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="30.6830%" y="757" width="0.1019%" height="15" fill="rgb(211,67,2)" fg:x="301" fg:w="1"/><text x="30.9330%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="30.6830%" y="741" width="0.1019%" height="15" fill="rgb(235,68,52)" fg:x="301" fg:w="1"/><text x="30.9330%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="30.6830%" y="725" width="0.1019%" height="15" fill="rgb(246,142,3)" fg:x="301" fg:w="1"/><text x="30.9330%" y="735.50"></text></g><g><title>web_crawler`scraper::html::Html::parse_document (3 samples, 0.31%)</title><rect x="30.5810%" y="997" width="0.3058%" height="15" fill="rgb(241,25,7)" fg:x="300" fg:w="3"/><text x="30.8310%" y="1007.50"></text></g><g><title>web_crawler`tendril::stream::TendrilSink::one (3 samples, 0.31%)</title><rect x="30.5810%" y="981" width="0.3058%" height="15" fill="rgb(242,119,39)" fg:x="300" fg:w="3"/><text x="30.8310%" y="991.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::run (3 samples, 0.31%)</title><rect x="30.5810%" y="965" width="0.3058%" height="15" fill="rgb(241,98,45)" fg:x="300" fg:w="3"/><text x="30.8310%" y="975.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::step (3 samples, 0.31%)</title><rect x="30.5810%" y="949" width="0.3058%" height="15" fill="rgb(254,28,30)" fg:x="300" fg:w="3"/><text x="30.8310%" y="959.50"></text></g><g><title>web_crawler`markup5ever::util::buffer_queue::BufferQueue::next (1 samples, 0.10%)</title><rect x="30.7849%" y="933" width="0.1019%" height="15" fill="rgb(241,142,54)" fg:x="302" fg:w="1"/><text x="31.0349%" y="943.50"></text></g><g><title>web_crawler`tokio::runtime::task::core::TaskIdGuard::enter (6 samples, 0.61%)</title><rect x="30.8869%" y="997" width="0.6116%" height="15" fill="rgb(222,85,15)" fg:x="303" fg:w="6"/><text x="31.1369%" y="1007.50"></text></g><g><title>web_crawler`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="31.4985%" y="981" width="0.1019%" height="15" fill="rgb(210,85,47)" fg:x="309" fg:w="1"/><text x="31.7485%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="31.4985%" y="965" width="0.1019%" height="15" fill="rgb(224,206,25)" fg:x="309" fg:w="1"/><text x="31.7485%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="31.4985%" y="949" width="0.1019%" height="15" fill="rgb(243,201,19)" fg:x="309" fg:w="1"/><text x="31.7485%" y="959.50"></text></g><g><title>web_crawler`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (1 samples, 0.10%)</title><rect x="31.6004%" y="901" width="0.1019%" height="15" fill="rgb(236,59,4)" fg:x="310" fg:w="1"/><text x="31.8504%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="31.6004%" y="885" width="0.1019%" height="15" fill="rgb(254,179,45)" fg:x="310" fg:w="1"/><text x="31.8504%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.10%)</title><rect x="31.6004%" y="869" width="0.1019%" height="15" fill="rgb(226,14,10)" fg:x="310" fg:w="1"/><text x="31.8504%" y="879.50"></text></g><g><title>web_crawler`&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (1 samples, 0.10%)</title><rect x="31.7023%" y="821" width="0.1019%" height="15" fill="rgb(244,27,41)" fg:x="311" fg:w="1"/><text x="31.9523%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`setsockopt (1 samples, 0.10%)</title><rect x="31.7023%" y="805" width="0.1019%" height="15" fill="rgb(235,35,32)" fg:x="311" fg:w="1"/><text x="31.9523%" y="815.50"></text></g><g><title>Security`SSLRecordReadInternal (2 samples, 0.20%)</title><rect x="31.8043%" y="741" width="0.2039%" height="15" fill="rgb(218,68,31)" fg:x="312" fg:w="2"/><text x="32.0543%" y="751.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (1 samples, 0.10%)</title><rect x="31.9062%" y="725" width="0.1019%" height="15" fill="rgb(207,120,37)" fg:x="313" fg:w="1"/><text x="32.1562%" y="735.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_gmac (1 samples, 0.10%)</title><rect x="31.9062%" y="709" width="0.1019%" height="15" fill="rgb(227,98,0)" fg:x="313" fg:w="1"/><text x="32.1562%" y="719.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_aad (1 samples, 0.10%)</title><rect x="31.9062%" y="693" width="0.1019%" height="15" fill="rgb(207,7,3)" fg:x="313" fg:w="1"/><text x="32.1562%" y="703.50"></text></g><g><title>libcoretls.dylib`SSLEncodeFinishedMessage (1 samples, 0.10%)</title><rect x="32.0082%" y="693" width="0.1019%" height="15" fill="rgb(206,98,19)" fg:x="314" fg:w="1"/><text x="32.2582%" y="703.50"></text></g><g><title>libcoretls.dylib`tls12ComputeFinishedMac (1 samples, 0.10%)</title><rect x="32.0082%" y="677" width="0.1019%" height="15" fill="rgb(217,5,26)" fg:x="314" fg:w="1"/><text x="32.2582%" y="687.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (1 samples, 0.10%)</title><rect x="32.0082%" y="661" width="0.1019%" height="15" fill="rgb(235,190,38)" fg:x="314" fg:w="1"/><text x="32.2582%" y="671.50"></text></g><g><title>libcoretls.dylib`tlsPHash (1 samples, 0.10%)</title><rect x="32.0082%" y="645" width="0.1019%" height="15" fill="rgb(247,86,24)" fg:x="314" fg:w="1"/><text x="32.2582%" y="655.50"></text></g><g><title>libcoretls.dylib`HMAC_Final (1 samples, 0.10%)</title><rect x="32.0082%" y="629" width="0.1019%" height="15" fill="rgb(205,101,16)" fg:x="314" fg:w="1"/><text x="32.2582%" y="639.50"></text></g><g><title>libcoretls.dylib`HashSHA256Final (1 samples, 0.10%)</title><rect x="32.0082%" y="613" width="0.1019%" height="15" fill="rgb(246,168,33)" fg:x="314" fg:w="1"/><text x="32.2582%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_final_64be (1 samples, 0.10%)</title><rect x="32.0082%" y="597" width="0.1019%" height="15" fill="rgb(231,114,1)" fg:x="314" fg:w="1"/><text x="32.2582%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (2 samples, 0.20%)</title><rect x="32.1101%" y="613" width="0.2039%" height="15" fill="rgb(207,184,53)" fg:x="315" fg:w="2"/><text x="32.3601%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccecdh_compute_shared_secret (5 samples, 0.51%)</title><rect x="32.1101%" y="677" width="0.5097%" height="15" fill="rgb(224,95,51)" fg:x="315" fg:w="5"/><text x="32.3601%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccecdh_compute_shared_secret_ws (5 samples, 0.51%)</title><rect x="32.1101%" y="661" width="0.5097%" height="15" fill="rgb(212,188,45)" fg:x="315" fg:w="5"/><text x="32.3601%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (5 samples, 0.51%)</title><rect x="32.1101%" y="645" width="0.5097%" height="15" fill="rgb(223,154,38)" fg:x="315" fg:w="5"/><text x="32.3601%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (5 samples, 0.51%)</title><rect x="32.1101%" y="629" width="0.5097%" height="15" fill="rgb(251,22,52)" fg:x="315" fg:w="5"/><text x="32.3601%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (3 samples, 0.31%)</title><rect x="32.3140%" y="613" width="0.3058%" height="15" fill="rgb(229,209,22)" fg:x="317" fg:w="3"/><text x="32.5640%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_internal_fips_ws (1 samples, 0.10%)</title><rect x="32.6198%" y="613" width="0.1019%" height="15" fill="rgb(234,138,34)" fg:x="320" fg:w="1"/><text x="32.8698%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_make_pub_from_priv_ws (1 samples, 0.10%)</title><rect x="32.6198%" y="597" width="0.1019%" height="15" fill="rgb(212,95,11)" fg:x="320" fg:w="1"/><text x="32.8698%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (1 samples, 0.10%)</title><rect x="32.6198%" y="581" width="0.1019%" height="15" fill="rgb(240,179,47)" fg:x="320" fg:w="1"/><text x="32.8698%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_clear (1 samples, 0.10%)</title><rect x="32.6198%" y="565" width="0.1019%" height="15" fill="rgb(240,163,11)" fg:x="320" fg:w="1"/><text x="32.8698%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_scalar_fips_retry_ws (1 samples, 0.10%)</title><rect x="32.7217%" y="581" width="0.1019%" height="15" fill="rgb(236,37,12)" fg:x="321" fg:w="1"/><text x="32.9717%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccn_random_bits_fips (1 samples, 0.10%)</title><rect x="32.7217%" y="565" width="0.1019%" height="15" fill="rgb(232,164,16)" fg:x="321" fg:w="1"/><text x="32.9717%" y="575.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.10%)</title><rect x="32.7217%" y="549" width="0.1019%" height="15" fill="rgb(244,205,15)" fg:x="321" fg:w="1"/><text x="32.9717%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccrng_crypto_generate (1 samples, 0.10%)</title><rect x="32.7217%" y="533" width="0.1019%" height="15" fill="rgb(223,117,47)" fg:x="321" fg:w="1"/><text x="32.9717%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccrng_schedule_read (1 samples, 0.10%)</title><rect x="32.7217%" y="517" width="0.1019%" height="15" fill="rgb(244,107,35)" fg:x="321" fg:w="1"/><text x="32.9717%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccrng_schedule_tree_read (1 samples, 0.10%)</title><rect x="32.7217%" y="501" width="0.1019%" height="15" fill="rgb(205,140,8)" fg:x="321" fg:w="1"/><text x="32.9717%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccrng_schedule_timer_read (1 samples, 0.10%)</title><rect x="32.7217%" y="485" width="0.1019%" height="15" fill="rgb(228,84,46)" fg:x="321" fg:w="1"/><text x="32.9717%" y="495.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.10%)</title><rect x="32.7217%" y="469" width="0.1019%" height="15" fill="rgb(254,188,9)" fg:x="321" fg:w="1"/><text x="32.9717%" y="479.50"></text></g><g><title>libsystem_c.dylib`_mach_boottime_usec (1 samples, 0.10%)</title><rect x="32.7217%" y="453" width="0.1019%" height="15" fill="rgb(206,112,54)" fg:x="321" fg:w="1"/><text x="32.9717%" y="463.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (1 samples, 0.10%)</title><rect x="32.7217%" y="437" width="0.1019%" height="15" fill="rgb(216,84,49)" fg:x="321" fg:w="1"/><text x="32.9717%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.10%)</title><rect x="32.7217%" y="421" width="0.1019%" height="15" fill="rgb(214,194,35)" fg:x="321" fg:w="1"/><text x="32.9717%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (1 samples, 0.10%)</title><rect x="32.8236%" y="533" width="0.1019%" height="15" fill="rgb(249,28,3)" fg:x="322" fg:w="1"/><text x="33.0736%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_ws (3 samples, 0.31%)</title><rect x="32.7217%" y="597" width="0.3058%" height="15" fill="rgb(222,56,52)" fg:x="321" fg:w="3"/><text x="32.9717%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_inner_ws (2 samples, 0.20%)</title><rect x="32.8236%" y="581" width="0.2039%" height="15" fill="rgb(245,217,50)" fg:x="322" fg:w="2"/><text x="33.0736%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (2 samples, 0.20%)</title><rect x="32.8236%" y="565" width="0.2039%" height="15" fill="rgb(213,201,24)" fg:x="322" fg:w="2"/><text x="33.0736%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (2 samples, 0.20%)</title><rect x="32.8236%" y="549" width="0.2039%" height="15" fill="rgb(248,116,28)" fg:x="322" fg:w="2"/><text x="33.0736%" y="559.50"></text></g><g><title>libcorecrypto.dylib`cczp_mul_ws (1 samples, 0.10%)</title><rect x="32.9256%" y="533" width="0.1019%" height="15" fill="rgb(219,72,43)" fg:x="323" fg:w="1"/><text x="33.1756%" y="543.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (11 samples, 1.12%)</title><rect x="32.0082%" y="741" width="1.1213%" height="15" fill="rgb(209,138,14)" fg:x="314" fg:w="11"/><text x="32.2582%" y="751.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (11 samples, 1.12%)</title><rect x="32.0082%" y="725" width="1.1213%" height="15" fill="rgb(222,18,33)" fg:x="314" fg:w="11"/><text x="32.2582%" y="735.50"></text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (11 samples, 1.12%)</title><rect x="32.0082%" y="709" width="1.1213%" height="15" fill="rgb(213,199,7)" fg:x="314" fg:w="11"/><text x="32.2582%" y="719.50"></text></g><g><title>libcoretls.dylib`SSLEncodeKeyExchange (10 samples, 1.02%)</title><rect x="32.1101%" y="693" width="1.0194%" height="15" fill="rgb(250,110,10)" fg:x="315" fg:w="10"/><text x="32.3601%" y="703.50"></text></g><g><title>libcoretls.dylib`sslEcdhCreateKey (5 samples, 0.51%)</title><rect x="32.6198%" y="677" width="0.5097%" height="15" fill="rgb(248,123,6)" fg:x="320" fg:w="5"/><text x="32.8698%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key (5 samples, 0.51%)</title><rect x="32.6198%" y="661" width="0.5097%" height="15" fill="rgb(206,91,31)" fg:x="320" fg:w="5"/><text x="32.8698%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips (5 samples, 0.51%)</title><rect x="32.6198%" y="645" width="0.5097%" height="15" fill="rgb(211,154,13)" fg:x="320" fg:w="5"/><text x="32.8698%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips_ws (5 samples, 0.51%)</title><rect x="32.6198%" y="629" width="0.5097%" height="15" fill="rgb(225,148,7)" fg:x="320" fg:w="5"/><text x="32.8698%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_pairwise_consistency_check_ws (4 samples, 0.41%)</title><rect x="32.7217%" y="613" width="0.4077%" height="15" fill="rgb(220,160,43)" fg:x="321" fg:w="4"/><text x="32.9717%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_verify_internal_with_base_ws (1 samples, 0.10%)</title><rect x="33.0275%" y="597" width="0.1019%" height="15" fill="rgb(213,52,39)" fg:x="324" fg:w="1"/><text x="33.2775%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccec_twin_mult_ws (1 samples, 0.10%)</title><rect x="33.0275%" y="581" width="0.1019%" height="15" fill="rgb(243,137,7)" fg:x="324" fg:w="1"/><text x="33.2775%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_normalized_ws (1 samples, 0.10%)</title><rect x="33.0275%" y="565" width="0.1019%" height="15" fill="rgb(230,79,13)" fg:x="324" fg:w="1"/><text x="33.2775%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (1 samples, 0.10%)</title><rect x="33.0275%" y="549" width="0.1019%" height="15" fill="rgb(247,105,23)" fg:x="324" fg:w="1"/><text x="33.2775%" y="559.50"></text></g><g><title>libcorecrypto.dylib`cczp_div2_ws (1 samples, 0.10%)</title><rect x="33.0275%" y="533" width="0.1019%" height="15" fill="rgb(223,179,41)" fg:x="324" fg:w="1"/><text x="33.2775%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.10%)</title><rect x="33.0275%" y="517" width="0.1019%" height="15" fill="rgb(218,9,34)" fg:x="324" fg:w="1"/><text x="33.2775%" y="527.50"></text></g><g><title>Security`CSSM_ModuleAttach (1 samples, 0.10%)</title><rect x="33.1295%" y="581" width="0.1019%" height="15" fill="rgb(222,106,8)" fg:x="325" fg:w="1"/><text x="33.3795%" y="591.50"></text></g><g><title>Security`StandardAttachmentMaker&lt;8u, cssm_spi_cl_funcs, &amp;CLNameTable&gt;::make (1 samples, 0.10%)</title><rect x="33.1295%" y="565" width="0.1019%" height="15" fill="rgb(211,220,0)" fg:x="325" fg:w="1"/><text x="33.3795%" y="575.50"></text></g><g><title>Security`Attachment::Attachment (1 samples, 0.10%)</title><rect x="33.1295%" y="549" width="0.1019%" height="15" fill="rgb(229,52,16)" fg:x="325" fg:w="1"/><text x="33.3795%" y="559.50"></text></g><g><title>Security`Security::ModuleNexus&lt;Security::MappingHandle&lt;long&gt;::State&gt;::operator() (1 samples, 0.10%)</title><rect x="33.1295%" y="533" width="0.1019%" height="15" fill="rgb(212,155,18)" fg:x="325" fg:w="1"/><text x="33.3795%" y="543.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 0.10%)</title><rect x="33.2314%" y="453" width="0.1019%" height="15" fill="rgb(242,21,14)" fg:x="326" fg:w="1"/><text x="33.4814%" y="463.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 0.10%)</title><rect x="33.2314%" y="437" width="0.1019%" height="15" fill="rgb(222,19,48)" fg:x="326" fg:w="1"/><text x="33.4814%" y="447.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 0.10%)</title><rect x="33.2314%" y="421" width="0.1019%" height="15" fill="rgb(232,45,27)" fg:x="326" fg:w="1"/><text x="33.4814%" y="431.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 0.10%)</title><rect x="33.2314%" y="405" width="0.1019%" height="15" fill="rgb(249,103,42)" fg:x="326" fg:w="1"/><text x="33.4814%" y="415.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 0.10%)</title><rect x="33.2314%" y="389" width="0.1019%" height="15" fill="rgb(246,81,33)" fg:x="326" fg:w="1"/><text x="33.4814%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.10%)</title><rect x="33.2314%" y="373" width="0.1019%" height="15" fill="rgb(252,33,42)" fg:x="326" fg:w="1"/><text x="33.4814%" y="383.50"></text></g><g><title>Security`Security::AtomicBufferedFile::read (1 samples, 0.10%)</title><rect x="33.3333%" y="293" width="0.1019%" height="15" fill="rgb(209,212,41)" fg:x="327" fg:w="1"/><text x="33.5833%" y="303.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.10%)</title><rect x="33.3333%" y="277" width="0.1019%" height="15" fill="rgb(207,154,6)" fg:x="327" fg:w="1"/><text x="33.5833%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="33.3333%" y="261" width="0.1019%" height="15" fill="rgb(223,64,47)" fg:x="327" fg:w="1"/><text x="33.5833%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (1 samples, 0.10%)</title><rect x="33.3333%" y="245" width="0.1019%" height="15" fill="rgb(211,161,38)" fg:x="327" fg:w="1"/><text x="33.5833%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.10%)</title><rect x="33.3333%" y="229" width="0.1019%" height="15" fill="rgb(219,138,40)" fg:x="327" fg:w="1"/><text x="33.5833%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.10%)</title><rect x="33.3333%" y="213" width="0.1019%" height="15" fill="rgb(241,228,46)" fg:x="327" fg:w="1"/><text x="33.5833%" y="223.50"></text></g><g><title>Security`SecTrustCopyPublicKey (4 samples, 0.41%)</title><rect x="33.1295%" y="677" width="0.4077%" height="15" fill="rgb(223,209,38)" fg:x="325" fg:w="4"/><text x="33.3795%" y="687.50"></text></g><g><title>Security`SecCertificateCopyPublicKey$LEGACYMAC (4 samples, 0.41%)</title><rect x="33.1295%" y="661" width="0.4077%" height="15" fill="rgb(236,164,45)" fg:x="325" fg:w="4"/><text x="33.3795%" y="671.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::publicKey (4 samples, 0.41%)</title><rect x="33.1295%" y="645" width="0.4077%" height="15" fill="rgb(231,15,5)" fg:x="325" fg:w="4"/><text x="33.3795%" y="655.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::copyFirstFieldValue (4 samples, 0.41%)</title><rect x="33.1295%" y="629" width="0.4077%" height="15" fill="rgb(252,35,15)" fg:x="325" fg:w="4"/><text x="33.3795%" y="639.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::clHandle (4 samples, 0.41%)</title><rect x="33.1295%" y="613" width="0.4077%" height="15" fill="rgb(248,181,18)" fg:x="325" fg:w="4"/><text x="33.3795%" y="623.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (4 samples, 0.41%)</title><rect x="33.1295%" y="597" width="0.4077%" height="15" fill="rgb(233,39,42)" fg:x="325" fg:w="4"/><text x="33.3795%" y="607.50"></text></g><g><title>Security`Security::CssmClient::ModuleImpl::activate (3 samples, 0.31%)</title><rect x="33.2314%" y="581" width="0.3058%" height="15" fill="rgb(238,110,33)" fg:x="326" fg:w="3"/><text x="33.4814%" y="591.50"></text></g><g><title>Security`CSSM_ModuleLoad (3 samples, 0.31%)</title><rect x="33.2314%" y="565" width="0.3058%" height="15" fill="rgb(233,195,10)" fg:x="326" fg:w="3"/><text x="33.4814%" y="575.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::fetch (3 samples, 0.31%)</title><rect x="33.2314%" y="549" width="0.3058%" height="15" fill="rgb(254,105,3)" fg:x="326" fg:w="3"/><text x="33.4814%" y="559.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery (3 samples, 0.31%)</title><rect x="33.2314%" y="533" width="0.3058%" height="15" fill="rgb(221,225,9)" fg:x="326" fg:w="3"/><text x="33.4814%" y="543.50"></text></g><g><title>Security`Security::MDSClient::Directory::dlGetFirst (3 samples, 0.31%)</title><rect x="33.2314%" y="517" width="0.3058%" height="15" fill="rgb(224,227,45)" fg:x="326" fg:w="3"/><text x="33.4814%" y="527.50"></text></g><g><title>Security`Security::MDSClient::Directory::cdsa (3 samples, 0.31%)</title><rect x="33.2314%" y="501" width="0.3058%" height="15" fill="rgb(229,198,43)" fg:x="326" fg:w="3"/><text x="33.4814%" y="511.50"></text></g><g><title>Security`mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (3 samples, 0.31%)</title><rect x="33.2314%" y="485" width="0.3058%" height="15" fill="rgb(206,209,35)" fg:x="326" fg:w="3"/><text x="33.4814%" y="495.50"></text></g><g><title>Security`Security::MDSSession::DbOpen (3 samples, 0.31%)</title><rect x="33.2314%" y="469" width="0.3058%" height="15" fill="rgb(245,195,53)" fg:x="326" fg:w="3"/><text x="33.4814%" y="479.50"></text></g><g><title>Security`Security::MDSSession::updateDataBases (2 samples, 0.20%)</title><rect x="33.3333%" y="453" width="0.2039%" height="15" fill="rgb(240,92,26)" fg:x="327" fg:w="2"/><text x="33.5833%" y="463.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundleDir (2 samples, 0.20%)</title><rect x="33.3333%" y="437" width="0.2039%" height="15" fill="rgb(207,40,23)" fg:x="327" fg:w="2"/><text x="33.5833%" y="447.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundle (2 samples, 0.20%)</title><rect x="33.3333%" y="421" width="0.2039%" height="15" fill="rgb(223,111,35)" fg:x="327" fg:w="2"/><text x="33.5833%" y="431.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::directDbHand (2 samples, 0.20%)</title><rect x="33.3333%" y="405" width="0.2039%" height="15" fill="rgb(229,147,28)" fg:x="327" fg:w="2"/><text x="33.5833%" y="415.50"></text></g><g><title>Security`Security::MDSSession::dbOpen (2 samples, 0.20%)</title><rect x="33.3333%" y="389" width="0.2039%" height="15" fill="rgb(211,29,28)" fg:x="327" fg:w="2"/><text x="33.5833%" y="399.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (2 samples, 0.20%)</title><rect x="33.3333%" y="373" width="0.2039%" height="15" fill="rgb(228,72,33)" fg:x="327" fg:w="2"/><text x="33.5833%" y="383.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (2 samples, 0.20%)</title><rect x="33.3333%" y="357" width="0.2039%" height="15" fill="rgb(205,214,31)" fg:x="327" fg:w="2"/><text x="33.5833%" y="367.50"></text></g><g><title>Security`Security::Database::_dbOpen (2 samples, 0.20%)</title><rect x="33.3333%" y="341" width="0.2039%" height="15" fill="rgb(224,111,15)" fg:x="327" fg:w="2"/><text x="33.5833%" y="351.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (2 samples, 0.20%)</title><rect x="33.3333%" y="325" width="0.2039%" height="15" fill="rgb(253,21,26)" fg:x="327" fg:w="2"/><text x="33.5833%" y="335.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (2 samples, 0.20%)</title><rect x="33.3333%" y="309" width="0.2039%" height="15" fill="rgb(245,139,43)" fg:x="327" fg:w="2"/><text x="33.5833%" y="319.50"></text></g><g><title>Security`Security::TrackingAllocator::~TrackingAllocator (1 samples, 0.10%)</title><rect x="33.4353%" y="293" width="0.1019%" height="15" fill="rgb(252,170,7)" fg:x="328" fg:w="1"/><text x="33.6853%" y="303.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="277" width="0.1019%" height="15" fill="rgb(231,118,14)" fg:x="328" fg:w="1"/><text x="33.6853%" y="287.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="261" width="0.1019%" height="15" fill="rgb(238,83,0)" fg:x="328" fg:w="1"/><text x="33.6853%" y="271.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="245" width="0.1019%" height="15" fill="rgb(221,39,39)" fg:x="328" fg:w="1"/><text x="33.6853%" y="255.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="229" width="0.1019%" height="15" fill="rgb(222,119,46)" fg:x="328" fg:w="1"/><text x="33.6853%" y="239.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="213" width="0.1019%" height="15" fill="rgb(222,165,49)" fg:x="328" fg:w="1"/><text x="33.6853%" y="223.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="197" width="0.1019%" height="15" fill="rgb(219,113,52)" fg:x="328" fg:w="1"/><text x="33.6853%" y="207.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="181" width="0.1019%" height="15" fill="rgb(214,7,15)" fg:x="328" fg:w="1"/><text x="33.6853%" y="191.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="165" width="0.1019%" height="15" fill="rgb(235,32,4)" fg:x="328" fg:w="1"/><text x="33.6853%" y="175.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="149" width="0.1019%" height="15" fill="rgb(238,90,54)" fg:x="328" fg:w="1"/><text x="33.6853%" y="159.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="133" width="0.1019%" height="15" fill="rgb(213,208,19)" fg:x="328" fg:w="1"/><text x="33.6853%" y="143.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="117" width="0.1019%" height="15" fill="rgb(233,156,4)" fg:x="328" fg:w="1"/><text x="33.6853%" y="127.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="101" width="0.1019%" height="15" fill="rgb(207,194,5)" fg:x="328" fg:w="1"/><text x="33.6853%" y="111.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="85" width="0.1019%" height="15" fill="rgb(206,111,30)" fg:x="328" fg:w="1"/><text x="33.6853%" y="95.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt;&gt;::destroy(std::__1::__tree_node (1 samples, 0.10%)</title><rect x="33.4353%" y="69" width="0.1019%" height="15" fill="rgb(243,70,54)" fg:x="328" fg:w="1"/><text x="33.6853%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="33.4353%" y="53" width="0.1019%" height="15" fill="rgb(242,28,8)" fg:x="328" fg:w="1"/><text x="33.6853%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="33.4353%" y="37" width="0.1019%" height="15" fill="rgb(219,106,18)" fg:x="328" fg:w="1"/><text x="33.6853%" y="47.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.10%)</title><rect x="33.5372%" y="645" width="0.1019%" height="15" fill="rgb(244,222,10)" fg:x="329" fg:w="1"/><text x="33.7872%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="33.5372%" y="629" width="0.1019%" height="15" fill="rgb(236,179,52)" fg:x="329" fg:w="1"/><text x="33.7872%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="33.5372%" y="613" width="0.1019%" height="15" fill="rgb(213,23,39)" fg:x="329" fg:w="1"/><text x="33.7872%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="33.5372%" y="597" width="0.1019%" height="15" fill="rgb(238,48,10)" fg:x="329" fg:w="1"/><text x="33.7872%" y="607.50"></text></g><g><title>Security`tls_handshake_message_callback (6 samples, 0.61%)</title><rect x="33.1295%" y="709" width="0.6116%" height="15" fill="rgb(251,196,23)" fg:x="325" fg:w="6"/><text x="33.3795%" y="719.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (6 samples, 0.61%)</title><rect x="33.1295%" y="693" width="0.6116%" height="15" fill="rgb(250,152,24)" fg:x="325" fg:w="6"/><text x="33.3795%" y="703.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_cfarray_from_certificates (2 samples, 0.20%)</title><rect x="33.5372%" y="677" width="0.2039%" height="15" fill="rgb(209,150,17)" fg:x="329" fg:w="2"/><text x="33.7872%" y="687.50"></text></g><g><title>Security`SecCertificateCreateWithData (2 samples, 0.20%)</title><rect x="33.5372%" y="661" width="0.2039%" height="15" fill="rgb(234,202,34)" fg:x="329" fg:w="2"/><text x="33.7872%" y="671.50"></text></g><g><title>Security`SecCertificateParse (1 samples, 0.10%)</title><rect x="33.6391%" y="645" width="0.1019%" height="15" fill="rgb(253,148,53)" fg:x="330" fg:w="1"/><text x="33.8891%" y="655.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (1 samples, 0.10%)</title><rect x="33.6391%" y="629" width="0.1019%" height="15" fill="rgb(218,129,16)" fg:x="330" fg:w="1"/><text x="33.8891%" y="639.50"></text></g><g><title>CoreFoundation`__CFBasicHashAddValue (1 samples, 0.10%)</title><rect x="33.6391%" y="613" width="0.1019%" height="15" fill="rgb(216,85,19)" fg:x="330" fg:w="1"/><text x="33.8891%" y="623.50"></text></g><g><title>Security`tls_verify_peer_cert (1 samples, 0.10%)</title><rect x="33.7411%" y="709" width="0.1019%" height="15" fill="rgb(235,228,7)" fg:x="331" fg:w="1"/><text x="33.9911%" y="719.50"></text></g><g><title>Security`sslCreateSecTrust (1 samples, 0.10%)</title><rect x="33.7411%" y="693" width="0.1019%" height="15" fill="rgb(245,175,0)" fg:x="331" fg:w="1"/><text x="33.9911%" y="703.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_peer_trust (1 samples, 0.10%)</title><rect x="33.7411%" y="677" width="0.1019%" height="15" fill="rgb(208,168,36)" fg:x="331" fg:w="1"/><text x="33.9911%" y="687.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_cfarray_from_certificates (1 samples, 0.10%)</title><rect x="33.7411%" y="661" width="0.1019%" height="15" fill="rgb(246,171,24)" fg:x="331" fg:w="1"/><text x="33.9911%" y="671.50"></text></g><g><title>Security`SecCertificateCreateWithData (1 samples, 0.10%)</title><rect x="33.7411%" y="645" width="0.1019%" height="15" fill="rgb(215,142,24)" fg:x="331" fg:w="1"/><text x="33.9911%" y="655.50"></text></g><g><title>Security`SecCertificateParse (1 samples, 0.10%)</title><rect x="33.7411%" y="629" width="0.1019%" height="15" fill="rgb(250,187,7)" fg:x="331" fg:w="1"/><text x="33.9911%" y="639.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (1 samples, 0.10%)</title><rect x="33.7411%" y="613" width="0.1019%" height="15" fill="rgb(228,66,33)" fg:x="331" fg:w="1"/><text x="33.9911%" y="623.50"></text></g><g><title>libcoretls.dylib`SSLResetFlight (1 samples, 0.10%)</title><rect x="33.8430%" y="693" width="0.1019%" height="15" fill="rgb(234,215,21)" fg:x="332" fg:w="1"/><text x="34.0930%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="33.8430%" y="677" width="0.1019%" height="15" fill="rgb(222,191,20)" fg:x="332" fg:w="1"/><text x="34.0930%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="33.8430%" y="661" width="0.1019%" height="15" fill="rgb(245,79,54)" fg:x="332" fg:w="1"/><text x="34.0930%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.10%)</title><rect x="33.8430%" y="645" width="0.1019%" height="15" fill="rgb(240,10,37)" fg:x="332" fg:w="1"/><text x="34.0930%" y="655.50"></text></g><g><title>libsystem_asl.dylib`_asl_mt_shim_send_message (1 samples, 0.10%)</title><rect x="33.9450%" y="613" width="0.1019%" height="15" fill="rgb(214,192,32)" fg:x="333" fg:w="1"/><text x="34.1950%" y="623.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (1 samples, 0.10%)</title><rect x="33.9450%" y="597" width="0.1019%" height="15" fill="rgb(209,36,54)" fg:x="333" fg:w="1"/><text x="34.1950%" y="607.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_mach_msg (1 samples, 0.10%)</title><rect x="33.9450%" y="581" width="0.1019%" height="15" fill="rgb(220,10,11)" fg:x="333" fg:w="1"/><text x="34.1950%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.10%)</title><rect x="33.9450%" y="565" width="0.1019%" height="15" fill="rgb(221,106,17)" fg:x="333" fg:w="1"/><text x="34.1950%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.10%)</title><rect x="33.9450%" y="549" width="0.1019%" height="15" fill="rgb(251,142,44)" fg:x="333" fg:w="1"/><text x="34.1950%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.10%)</title><rect x="33.9450%" y="533" width="0.1019%" height="15" fill="rgb(238,13,15)" fg:x="333" fg:w="1"/><text x="34.1950%" y="543.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (3 samples, 0.31%)</title><rect x="33.8430%" y="709" width="0.3058%" height="15" fill="rgb(208,107,27)" fg:x="332" fg:w="3"/><text x="34.0930%" y="719.50"></text></g><g><title>libcoretls.dylib`tls_metric_client_finished (2 samples, 0.20%)</title><rect x="33.9450%" y="693" width="0.2039%" height="15" fill="rgb(205,136,37)" fg:x="333" fg:w="2"/><text x="34.1950%" y="703.50"></text></g><g><title>libcoretls.dylib`tls_metric_event_add_string (2 samples, 0.20%)</title><rect x="33.9450%" y="677" width="0.2039%" height="15" fill="rgb(250,205,27)" fg:x="333" fg:w="2"/><text x="34.1950%" y="687.50"></text></g><g><title>libsystem_asl.dylib`asl_log (2 samples, 0.20%)</title><rect x="33.9450%" y="661" width="0.2039%" height="15" fill="rgb(210,80,43)" fg:x="333" fg:w="2"/><text x="34.1950%" y="671.50"></text></g><g><title>libsystem_asl.dylib`_asl_lib_vlog (2 samples, 0.20%)</title><rect x="33.9450%" y="645" width="0.2039%" height="15" fill="rgb(247,160,36)" fg:x="333" fg:w="2"/><text x="34.1950%" y="655.50"></text></g><g><title>libsystem_asl.dylib`_asl_send_message (2 samples, 0.20%)</title><rect x="33.9450%" y="629" width="0.2039%" height="15" fill="rgb(234,13,49)" fg:x="333" fg:w="2"/><text x="34.1950%" y="639.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_to_string_raw (1 samples, 0.10%)</title><rect x="34.0469%" y="613" width="0.1019%" height="15" fill="rgb(234,122,0)" fg:x="334" fg:w="1"/><text x="34.2969%" y="623.50"></text></g><g><title>libsystem_asl.dylib`asl_string_new (1 samples, 0.10%)</title><rect x="34.0469%" y="597" width="0.1019%" height="15" fill="rgb(207,146,38)" fg:x="334" fg:w="1"/><text x="34.2969%" y="607.50"></text></g><g><title>libsystem_asl.dylib`asl_string_append_no_encoding_len (1 samples, 0.10%)</title><rect x="34.0469%" y="581" width="0.1019%" height="15" fill="rgb(207,177,25)" fg:x="334" fg:w="1"/><text x="34.2969%" y="591.50"></text></g><g><title>libsystem_asl.dylib`_asl_string_grow (1 samples, 0.10%)</title><rect x="34.0469%" y="565" width="0.1019%" height="15" fill="rgb(211,178,42)" fg:x="334" fg:w="1"/><text x="34.2969%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (1 samples, 0.10%)</title><rect x="34.0469%" y="549" width="0.1019%" height="15" fill="rgb(230,69,54)" fg:x="334" fg:w="1"/><text x="34.2969%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (1 samples, 0.10%)</title><rect x="34.0469%" y="533" width="0.1019%" height="15" fill="rgb(214,135,41)" fg:x="334" fg:w="1"/><text x="34.2969%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 0.10%)</title><rect x="34.1488%" y="565" width="0.1019%" height="15" fill="rgb(237,67,25)" fg:x="335" fg:w="1"/><text x="34.3988%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccec_twin_mult_ws (2 samples, 0.20%)</title><rect x="34.1488%" y="597" width="0.2039%" height="15" fill="rgb(222,189,50)" fg:x="335" fg:w="2"/><text x="34.3988%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccec_double_ws (2 samples, 0.20%)</title><rect x="34.1488%" y="581" width="0.2039%" height="15" fill="rgb(245,148,34)" fg:x="335" fg:w="2"/><text x="34.3988%" y="591.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (1 samples, 0.10%)</title><rect x="34.2508%" y="565" width="0.1019%" height="15" fill="rgb(222,29,6)" fg:x="336" fg:w="1"/><text x="34.5008%" y="575.50"></text></g><g><title>Security`SSLHandshake (26 samples, 2.65%)</title><rect x="31.8043%" y="773" width="2.6504%" height="15" fill="rgb(221,189,43)" fg:x="312" fg:w="26"/><text x="32.0543%" y="783.50">Se..</text></g><g><title>Security`SSLHandshakeProceed (26 samples, 2.65%)</title><rect x="31.8043%" y="757" width="2.6504%" height="15" fill="rgb(207,36,27)" fg:x="312" fg:w="26"/><text x="32.0543%" y="767.50">Se..</text></g><g><title>libcoretls.dylib`tls_handshake_process (13 samples, 1.33%)</title><rect x="33.1295%" y="741" width="1.3252%" height="15" fill="rgb(217,90,24)" fg:x="325" fg:w="13"/><text x="33.3795%" y="751.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (13 samples, 1.33%)</title><rect x="33.1295%" y="725" width="1.3252%" height="15" fill="rgb(224,66,35)" fg:x="325" fg:w="13"/><text x="33.3795%" y="735.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeMessage (3 samples, 0.31%)</title><rect x="34.1488%" y="709" width="0.3058%" height="15" fill="rgb(221,13,50)" fg:x="335" fg:w="3"/><text x="34.3988%" y="719.50"></text></g><g><title>libcoretls.dylib`SSLProcessServerKeyExchange (3 samples, 0.31%)</title><rect x="34.1488%" y="693" width="0.3058%" height="15" fill="rgb(236,68,49)" fg:x="335" fg:w="3"/><text x="34.3988%" y="703.50"></text></g><g><title>libcoretls.dylib`sslRawVerify (3 samples, 0.31%)</title><rect x="34.1488%" y="677" width="0.3058%" height="15" fill="rgb(229,146,28)" fg:x="335" fg:w="3"/><text x="34.3988%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccec_verify (3 samples, 0.31%)</title><rect x="34.1488%" y="661" width="0.3058%" height="15" fill="rgb(225,31,38)" fg:x="335" fg:w="3"/><text x="34.3988%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccec_verify_digest (3 samples, 0.31%)</title><rect x="34.1488%" y="645" width="0.3058%" height="15" fill="rgb(250,208,3)" fg:x="335" fg:w="3"/><text x="34.3988%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_verify_digest_ws (3 samples, 0.31%)</title><rect x="34.1488%" y="629" width="0.3058%" height="15" fill="rgb(246,54,23)" fg:x="335" fg:w="3"/><text x="34.3988%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_verify_internal_with_base_ws (3 samples, 0.31%)</title><rect x="34.1488%" y="613" width="0.3058%" height="15" fill="rgb(243,76,11)" fg:x="335" fg:w="3"/><text x="34.3988%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccn_read_uint (1 samples, 0.10%)</title><rect x="34.3527%" y="597" width="0.1019%" height="15" fill="rgb(245,21,50)" fg:x="337" fg:w="1"/><text x="34.6027%" y="607.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke (1 samples, 0.10%)</title><rect x="34.4546%" y="597" width="0.1019%" height="15" fill="rgb(228,9,43)" fg:x="338" fg:w="1"/><text x="34.7046%" y="607.50"></text></g><g><title>Security`SecXPCDictionarySetPolicies (1 samples, 0.10%)</title><rect x="34.4546%" y="581" width="0.1019%" height="15" fill="rgb(208,100,47)" fg:x="338" fg:w="1"/><text x="34.7046%" y="591.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (1 samples, 0.10%)</title><rect x="34.4546%" y="565" width="0.1019%" height="15" fill="rgb(232,26,8)" fg:x="338" fg:w="1"/><text x="34.7046%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __apply:context:] (1 samples, 0.10%)</title><rect x="34.4546%" y="549" width="0.1019%" height="15" fill="rgb(216,166,38)" fg:x="338" fg:w="1"/><text x="34.7046%" y="559.50"></text></g><g><title>CoreFoundation`__CFXPCDictionaryApplier (1 samples, 0.10%)</title><rect x="34.4546%" y="533" width="0.1019%" height="15" fill="rgb(251,202,51)" fg:x="338" fg:w="1"/><text x="34.7046%" y="543.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (1 samples, 0.10%)</title><rect x="34.4546%" y="517" width="0.1019%" height="15" fill="rgb(254,216,34)" fg:x="338" fg:w="1"/><text x="34.7046%" y="527.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (1 samples, 0.10%)</title><rect x="34.4546%" y="501" width="0.1019%" height="15" fill="rgb(251,32,27)" fg:x="338" fg:w="1"/><text x="34.7046%" y="511.50"></text></g><g><title>CoreFoundation`_CFDataCreateDispatchData (1 samples, 0.10%)</title><rect x="34.4546%" y="485" width="0.1019%" height="15" fill="rgb(208,127,28)" fg:x="338" fg:w="1"/><text x="34.7046%" y="495.50"></text></g><g><title>libdispatch.dylib`dispatch_data_create (1 samples, 0.10%)</title><rect x="34.4546%" y="469" width="0.1019%" height="15" fill="rgb(224,137,22)" fg:x="338" fg:w="1"/><text x="34.7046%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke_slow (1 samples, 0.10%)</title><rect x="34.4546%" y="453" width="0.1019%" height="15" fill="rgb(254,70,32)" fg:x="338" fg:w="1"/><text x="34.7046%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1 samples, 0.10%)</title><rect x="34.4546%" y="437" width="0.1019%" height="15" fill="rgb(229,75,37)" fg:x="338" fg:w="1"/><text x="34.7046%" y="447.50"></text></g><g><title>web_crawler`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (28 samples, 2.85%)</title><rect x="31.8043%" y="821" width="2.8542%" height="15" fill="rgb(252,64,23)" fg:x="312" fg:w="28"/><text x="32.0543%" y="831.50">we..</text></g><g><title>web_crawler`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (28 samples, 2.85%)</title><rect x="31.8043%" y="805" width="2.8542%" height="15" fill="rgb(232,162,48)" fg:x="312" fg:w="28"/><text x="32.0543%" y="815.50">we..</text></g><g><title>web_crawler`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (28 samples, 2.85%)</title><rect x="31.8043%" y="789" width="2.8542%" height="15" fill="rgb(246,160,12)" fg:x="312" fg:w="28"/><text x="32.0543%" y="799.50">we..</text></g><g><title>web_crawler`security_framework::trust::SecTrust::evaluate_with_error (2 samples, 0.20%)</title><rect x="34.4546%" y="773" width="0.2039%" height="15" fill="rgb(247,166,0)" fg:x="338" fg:w="2"/><text x="34.7046%" y="783.50"></text></g><g><title>Security`SecTrustEvaluateInternal (2 samples, 0.20%)</title><rect x="34.4546%" y="757" width="0.2039%" height="15" fill="rgb(249,219,21)" fg:x="338" fg:w="2"/><text x="34.7046%" y="767.50"></text></g><g><title>Security`SecTrustEvaluateIfNecessary (2 samples, 0.20%)</title><rect x="34.4546%" y="741" width="0.2039%" height="15" fill="rgb(205,209,3)" fg:x="338" fg:w="2"/><text x="34.7046%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (2 samples, 0.20%)</title><rect x="34.4546%" y="725" width="0.2039%" height="15" fill="rgb(243,44,1)" fg:x="338" fg:w="2"/><text x="34.7046%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.20%)</title><rect x="34.4546%" y="709" width="0.2039%" height="15" fill="rgb(206,159,16)" fg:x="338" fg:w="2"/><text x="34.7046%" y="719.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke.521 (2 samples, 0.20%)</title><rect x="34.4546%" y="693" width="0.2039%" height="15" fill="rgb(244,77,30)" fg:x="338" fg:w="2"/><text x="34.7046%" y="703.50"></text></g><g><title>libsystem_trace.dylib`_os_activity_initiate_impl (2 samples, 0.20%)</title><rect x="34.4546%" y="677" width="0.2039%" height="15" fill="rgb(218,69,12)" fg:x="338" fg:w="2"/><text x="34.7046%" y="687.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_2 (2 samples, 0.20%)</title><rect x="34.4546%" y="661" width="0.2039%" height="15" fill="rgb(212,87,7)" fg:x="338" fg:w="2"/><text x="34.7046%" y="671.50"></text></g><g><title>Security`SecOSStatusWith (2 samples, 0.20%)</title><rect x="34.4546%" y="645" width="0.2039%" height="15" fill="rgb(245,114,25)" fg:x="338" fg:w="2"/><text x="34.7046%" y="655.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_3 (2 samples, 0.20%)</title><rect x="34.4546%" y="629" width="0.2039%" height="15" fill="rgb(210,61,42)" fg:x="338" fg:w="2"/><text x="34.7046%" y="639.50"></text></g><g><title>Security`securityd_send_sync_and_do (2 samples, 0.20%)</title><rect x="34.4546%" y="613" width="0.2039%" height="15" fill="rgb(211,52,33)" fg:x="338" fg:w="2"/><text x="34.7046%" y="623.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke_2 (1 samples, 0.10%)</title><rect x="34.5566%" y="597" width="0.1019%" height="15" fill="rgb(234,58,33)" fg:x="339" fg:w="1"/><text x="34.8066%" y="607.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryOptional (1 samples, 0.10%)</title><rect x="34.5566%" y="581" width="0.1019%" height="15" fill="rgb(220,115,36)" fg:x="339" fg:w="1"/><text x="34.8066%" y="591.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryAndPossiblyMutateMessage (1 samples, 0.10%)</title><rect x="34.5566%" y="565" width="0.1019%" height="15" fill="rgb(243,153,54)" fg:x="339" fg:w="1"/><text x="34.8066%" y="575.50"></text></g><g><title>Security`SecXPCDictionaryCopyPListAndPossiblyMutateMessage (1 samples, 0.10%)</title><rect x="34.5566%" y="549" width="0.1019%" height="15" fill="rgb(251,47,18)" fg:x="339" fg:w="1"/><text x="34.8066%" y="559.50"></text></g><g><title>Security`der_decode_plist (1 samples, 0.10%)</title><rect x="34.5566%" y="533" width="0.1019%" height="15" fill="rgb(242,102,42)" fg:x="339" fg:w="1"/><text x="34.8066%" y="543.50"></text></g><g><title>Security`der_decode_dictionary (1 samples, 0.10%)</title><rect x="34.5566%" y="517" width="0.1019%" height="15" fill="rgb(234,31,38)" fg:x="339" fg:w="1"/><text x="34.8066%" y="527.50"></text></g><g><title>Security`der_decode_plist (1 samples, 0.10%)</title><rect x="34.5566%" y="501" width="0.1019%" height="15" fill="rgb(221,117,51)" fg:x="339" fg:w="1"/><text x="34.8066%" y="511.50"></text></g><g><title>Security`der_decode_date (1 samples, 0.10%)</title><rect x="34.5566%" y="485" width="0.1019%" height="15" fill="rgb(212,20,18)" fg:x="339" fg:w="1"/><text x="34.8066%" y="495.50"></text></g><g><title>Security`der_decode_commontime_body (1 samples, 0.10%)</title><rect x="34.5566%" y="469" width="0.1019%" height="15" fill="rgb(245,133,36)" fg:x="339" fg:w="1"/><text x="34.8066%" y="479.50"></text></g><g><title>Security`SecCFCalendarDoWithZuluCalendar (1 samples, 0.10%)</title><rect x="34.5566%" y="453" width="0.1019%" height="15" fill="rgb(212,6,19)" fg:x="339" fg:w="1"/><text x="34.8066%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.10%)</title><rect x="34.5566%" y="437" width="0.1019%" height="15" fill="rgb(218,1,36)" fg:x="339" fg:w="1"/><text x="34.8066%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.10%)</title><rect x="34.5566%" y="421" width="0.1019%" height="15" fill="rgb(246,84,54)" fg:x="339" fg:w="1"/><text x="34.8066%" y="431.50"></text></g><g><title>Security`__SecCFCalendarDoWithZuluCalendar_block_invoke (1 samples, 0.10%)</title><rect x="34.5566%" y="405" width="0.1019%" height="15" fill="rgb(242,110,6)" fg:x="339" fg:w="1"/><text x="34.8066%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.10%)</title><rect x="34.5566%" y="389" width="0.1019%" height="15" fill="rgb(214,47,5)" fg:x="339" fg:w="1"/><text x="34.8066%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.10%)</title><rect x="34.5566%" y="373" width="0.1019%" height="15" fill="rgb(218,159,25)" fg:x="339" fg:w="1"/><text x="34.8066%" y="383.50"></text></g><g><title>Security`__SecCFCalendarGetZulu_block_invoke (1 samples, 0.10%)</title><rect x="34.5566%" y="357" width="0.1019%" height="15" fill="rgb(215,211,28)" fg:x="339" fg:w="1"/><text x="34.8066%" y="367.50"></text></g><g><title>CoreFoundation`_CFCalendarCreate (1 samples, 0.10%)</title><rect x="34.5566%" y="341" width="0.1019%" height="15" fill="rgb(238,59,32)" fg:x="339" fg:w="1"/><text x="34.8066%" y="351.50"></text></g><g><title>CoreFoundation`_CFCalendarInitialize (1 samples, 0.10%)</title><rect x="34.5566%" y="325" width="0.1019%" height="15" fill="rgb(226,82,3)" fg:x="339" fg:w="1"/><text x="34.8066%" y="335.50"></text></g><g><title>CoreFoundation`__CFCalendarCreateUCalendar (1 samples, 0.10%)</title><rect x="34.5566%" y="309" width="0.1019%" height="15" fill="rgb(240,164,32)" fg:x="339" fg:w="1"/><text x="34.8066%" y="319.50"></text></g><g><title>CoreFoundation`__cficu_ucal_open (1 samples, 0.10%)</title><rect x="34.5566%" y="293" width="0.1019%" height="15" fill="rgb(232,46,7)" fg:x="339" fg:w="1"/><text x="34.8066%" y="303.50"></text></g><g><title>libicucore.A.dylib`ucal_open (1 samples, 0.10%)</title><rect x="34.5566%" y="277" width="0.1019%" height="15" fill="rgb(229,129,53)" fg:x="339" fg:w="1"/><text x="34.8066%" y="287.50"></text></g><g><title>libicucore.A.dylib`0x0000000193676700 (1 samples, 0.10%)</title><rect x="34.5566%" y="261" width="0.1019%" height="15" fill="rgb(234,188,29)" fg:x="339" fg:w="1"/><text x="34.8066%" y="271.50"></text></g><g><title>libicucore.A.dylib`icu::TimeZone::createTimeZone (1 samples, 0.10%)</title><rect x="34.5566%" y="245" width="0.1019%" height="15" fill="rgb(246,141,4)" fg:x="339" fg:w="1"/><text x="34.8066%" y="255.50"></text></g><g><title>libicucore.A.dylib`0x00000001936570c8 (1 samples, 0.10%)</title><rect x="34.5566%" y="229" width="0.1019%" height="15" fill="rgb(229,23,39)" fg:x="339" fg:w="1"/><text x="34.8066%" y="239.50"></text></g><g><title>libicucore.A.dylib`icu::OlsonTimeZone::OlsonTimeZone (1 samples, 0.10%)</title><rect x="34.5566%" y="213" width="0.1019%" height="15" fill="rgb(206,12,3)" fg:x="339" fg:w="1"/><text x="34.8066%" y="223.50"></text></g><g><title>libicucore.A.dylib`icu::ZoneMeta::getCanonicalCLDRID (1 samples, 0.10%)</title><rect x="34.5566%" y="197" width="0.1019%" height="15" fill="rgb(252,226,20)" fg:x="339" fg:w="1"/><text x="34.8066%" y="207.50"></text></g><g><title>libicucore.A.dylib`ustr_hashUCharsN (1 samples, 0.10%)</title><rect x="34.5566%" y="181" width="0.1019%" height="15" fill="rgb(216,123,35)" fg:x="339" fg:w="1"/><text x="34.8066%" y="191.50"></text></g><g><title>Security`SSLCreateContext (1 samples, 0.10%)</title><rect x="34.6585%" y="773" width="0.1019%" height="15" fill="rgb(212,68,40)" fg:x="340" fg:w="1"/><text x="34.9085%" y="783.50"></text></g><g><title>Security`SSLCreateContextWithRecordFuncs (1 samples, 0.10%)</title><rect x="34.6585%" y="757" width="0.1019%" height="15" fill="rgb(254,125,32)" fg:x="340" fg:w="1"/><text x="34.9085%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.10%)</title><rect x="34.6585%" y="741" width="0.1019%" height="15" fill="rgb(253,97,22)" fg:x="340" fg:w="1"/><text x="34.9085%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.10%)</title><rect x="34.6585%" y="725" width="0.1019%" height="15" fill="rgb(241,101,14)" fg:x="340" fg:w="1"/><text x="34.9085%" y="735.50"></text></g><g><title>Security`__SSLCreateContextWithRecordFuncs_block_invoke (1 samples, 0.10%)</title><rect x="34.6585%" y="709" width="0.1019%" height="15" fill="rgb(238,103,29)" fg:x="340" fg:w="1"/><text x="34.9085%" y="719.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.10%)</title><rect x="34.6585%" y="693" width="0.1019%" height="15" fill="rgb(233,195,47)" fg:x="340" fg:w="1"/><text x="34.9085%" y="703.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.10%)</title><rect x="34.6585%" y="677" width="0.1019%" height="15" fill="rgb(246,218,30)" fg:x="340" fg:w="1"/><text x="34.9085%" y="687.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.10%)</title><rect x="34.6585%" y="661" width="0.1019%" height="15" fill="rgb(219,145,47)" fg:x="340" fg:w="1"/><text x="34.9085%" y="671.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.10%)</title><rect x="34.6585%" y="645" width="0.1019%" height="15" fill="rgb(243,12,26)" fg:x="340" fg:w="1"/><text x="34.9085%" y="655.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchLists:] (1 samples, 0.10%)</title><rect x="34.6585%" y="629" width="0.1019%" height="15" fill="rgb(214,87,16)" fg:x="340" fg:w="1"/><text x="34.9085%" y="639.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke.155 (1 samples, 0.10%)</title><rect x="34.6585%" y="613" width="0.1019%" height="15" fill="rgb(208,99,42)" fg:x="340" fg:w="1"/><text x="34.9085%" y="623.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource addSourceForIdentifier:user:byHost:container:] (1 samples, 0.10%)</title><rect x="34.6585%" y="597" width="0.1019%" height="15" fill="rgb(253,99,2)" fg:x="340" fg:w="1"/><text x="34.9085%" y="607.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSourceForIdentifier:user:byHost:container:cloud:perform:] (1 samples, 0.10%)</title><rect x="34.6585%" y="581" width="0.1019%" height="15" fill="rgb(220,168,23)" fg:x="340" fg:w="1"/><text x="34.9085%" y="591.50"></text></g><g><title>CoreFoundation`CFRelease (1 samples, 0.10%)</title><rect x="34.6585%" y="565" width="0.1019%" height="15" fill="rgb(242,38,24)" fg:x="340" fg:w="1"/><text x="34.9085%" y="575.50"></text></g><g><title>web_crawler`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (32 samples, 3.26%)</title><rect x="31.6004%" y="917" width="3.2620%" height="15" fill="rgb(225,182,9)" fg:x="310" fg:w="32"/><text x="31.8504%" y="927.50">web..</text></g><g><title>web_crawler`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (31 samples, 3.16%)</title><rect x="31.7023%" y="901" width="3.1600%" height="15" fill="rgb(243,178,37)" fg:x="311" fg:w="31"/><text x="31.9523%" y="911.50">web..</text></g><g><title>web_crawler`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (31 samples, 3.16%)</title><rect x="31.7023%" y="885" width="3.1600%" height="15" fill="rgb(232,139,19)" fg:x="311" fg:w="31"/><text x="31.9523%" y="895.50">web..</text></g><g><title>web_crawler`reqwest::connect::with_timeout::_{{closure}} (31 samples, 3.16%)</title><rect x="31.7023%" y="869" width="3.1600%" height="15" fill="rgb(225,201,24)" fg:x="311" fg:w="31"/><text x="31.9523%" y="879.50">web..</text></g><g><title>web_crawler`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (31 samples, 3.16%)</title><rect x="31.7023%" y="853" width="3.1600%" height="15" fill="rgb(221,47,46)" fg:x="311" fg:w="31"/><text x="31.9523%" y="863.50">web..</text></g><g><title>web_crawler`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (31 samples, 3.16%)</title><rect x="31.7023%" y="837" width="3.1600%" height="15" fill="rgb(249,23,13)" fg:x="311" fg:w="31"/><text x="31.9523%" y="847.50">web..</text></g><g><title>web_crawler`&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (2 samples, 0.20%)</title><rect x="34.6585%" y="821" width="0.2039%" height="15" fill="rgb(219,9,5)" fg:x="340" fg:w="2"/><text x="34.9085%" y="831.50"></text></g><g><title>web_crawler`native_tls::imp::TlsConnector::connect (2 samples, 0.20%)</title><rect x="34.6585%" y="805" width="0.2039%" height="15" fill="rgb(254,171,16)" fg:x="340" fg:w="2"/><text x="34.9085%" y="815.50"></text></g><g><title>web_crawler`security_framework::secure_transport::ClientBuilder::handshake (2 samples, 0.20%)</title><rect x="34.6585%" y="789" width="0.2039%" height="15" fill="rgb(230,171,20)" fg:x="340" fg:w="2"/><text x="34.9085%" y="799.50"></text></g><g><title>web_crawler`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (1 samples, 0.10%)</title><rect x="34.7604%" y="773" width="0.1019%" height="15" fill="rgb(210,71,41)" fg:x="341" fg:w="1"/><text x="35.0104%" y="783.50"></text></g><g><title>Security`SSLHandshake (1 samples, 0.10%)</title><rect x="34.7604%" y="757" width="0.1019%" height="15" fill="rgb(206,173,20)" fg:x="341" fg:w="1"/><text x="35.0104%" y="767.50"></text></g><g><title>Security`SSLHandshakeProceed (1 samples, 0.10%)</title><rect x="34.7604%" y="741" width="0.1019%" height="15" fill="rgb(233,88,34)" fg:x="341" fg:w="1"/><text x="35.0104%" y="751.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (1 samples, 0.10%)</title><rect x="34.7604%" y="725" width="0.1019%" height="15" fill="rgb(223,209,46)" fg:x="341" fg:w="1"/><text x="35.0104%" y="735.50"></text></g><g><title>web_crawler`security_framework::secure_transport::write_func (1 samples, 0.10%)</title><rect x="34.7604%" y="709" width="0.1019%" height="15" fill="rgb(250,43,18)" fg:x="341" fg:w="1"/><text x="35.0104%" y="719.50"></text></g><g><title>web_crawler`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.10%)</title><rect x="34.7604%" y="693" width="0.1019%" height="15" fill="rgb(208,13,10)" fg:x="341" fg:w="1"/><text x="35.0104%" y="703.50"></text></g><g><title>web_crawler`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="34.7604%" y="677" width="0.1019%" height="15" fill="rgb(212,200,36)" fg:x="341" fg:w="1"/><text x="35.0104%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.10%)</title><rect x="34.7604%" y="661" width="0.1019%" height="15" fill="rgb(225,90,30)" fg:x="341" fg:w="1"/><text x="35.0104%" y="671.50"></text></g><g><title>web_crawler`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (33 samples, 3.36%)</title><rect x="31.6004%" y="933" width="3.3639%" height="15" fill="rgb(236,182,39)" fg:x="310" fg:w="33"/><text x="31.8504%" y="943.50">web..</text></g><g><title>web_crawler`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::new (1 samples, 0.10%)</title><rect x="34.8624%" y="917" width="0.1019%" height="15" fill="rgb(212,144,35)" fg:x="342" fg:w="1"/><text x="35.1124%" y="927.50"></text></g><g><title>web_crawler`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (34 samples, 3.47%)</title><rect x="31.6004%" y="981" width="3.4659%" height="15" fill="rgb(228,63,44)" fg:x="310" fg:w="34"/><text x="31.8504%" y="991.50">web..</text></g><g><title>web_crawler`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (34 samples, 3.47%)</title><rect x="31.6004%" y="965" width="3.4659%" height="15" fill="rgb(228,109,6)" fg:x="310" fg:w="34"/><text x="31.8504%" y="975.50">web..</text></g><g><title>web_crawler`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (34 samples, 3.47%)</title><rect x="31.6004%" y="949" width="3.4659%" height="15" fill="rgb(238,117,24)" fg:x="310" fg:w="34"/><text x="31.8504%" y="959.50">web..</text></g><g><title>web_crawler`&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="34.9643%" y="933" width="0.1019%" height="15" fill="rgb(242,26,26)" fg:x="343" fg:w="1"/><text x="35.2143%" y="943.50"></text></g><g><title>web_crawler`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="34.9643%" y="917" width="0.1019%" height="15" fill="rgb(221,92,48)" fg:x="343" fg:w="1"/><text x="35.2143%" y="927.50"></text></g><g><title>web_crawler`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="34.9643%" y="901" width="0.1019%" height="15" fill="rgb(209,209,32)" fg:x="343" fg:w="1"/><text x="35.2143%" y="911.50"></text></g><g><title>web_crawler`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="34.9643%" y="885" width="0.1019%" height="15" fill="rgb(221,70,22)" fg:x="343" fg:w="1"/><text x="35.2143%" y="895.50"></text></g><g><title>web_crawler`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="34.9643%" y="869" width="0.1019%" height="15" fill="rgb(248,145,5)" fg:x="343" fg:w="1"/><text x="35.2143%" y="879.50"></text></g><g><title>web_crawler`reqwest::connect::with_timeout::_{{closure}} (1 samples, 0.10%)</title><rect x="34.9643%" y="853" width="0.1019%" height="15" fill="rgb(226,116,26)" fg:x="343" fg:w="1"/><text x="35.2143%" y="863.50"></text></g><g><title>web_crawler`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (1 samples, 0.10%)</title><rect x="34.9643%" y="837" width="0.1019%" height="15" fill="rgb(244,5,17)" fg:x="343" fg:w="1"/><text x="35.2143%" y="847.50"></text></g><g><title>web_crawler`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (1 samples, 0.10%)</title><rect x="34.9643%" y="821" width="0.1019%" height="15" fill="rgb(252,159,33)" fg:x="343" fg:w="1"/><text x="35.2143%" y="831.50"></text></g><g><title>web_crawler`&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (1 samples, 0.10%)</title><rect x="34.9643%" y="805" width="0.1019%" height="15" fill="rgb(206,71,0)" fg:x="343" fg:w="1"/><text x="35.2143%" y="815.50"></text></g><g><title>web_crawler`&lt;reqwest::dns::gai::GaiResolver as reqwest::dns::resolve::Resolve&gt;::resolve (1 samples, 0.10%)</title><rect x="34.9643%" y="789" width="0.1019%" height="15" fill="rgb(233,118,54)" fg:x="343" fg:w="1"/><text x="35.2143%" y="799.50"></text></g><g><title>web_crawler`tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.10%)</title><rect x="34.9643%" y="773" width="0.1019%" height="15" fill="rgb(234,83,48)" fg:x="343" fg:w="1"/><text x="35.2143%" y="783.50"></text></g><g><title>web_crawler`tokio::runtime::blocking::pool::Spawner::spawn_blocking (1 samples, 0.10%)</title><rect x="34.9643%" y="757" width="0.1019%" height="15" fill="rgb(228,3,54)" fg:x="343" fg:w="1"/><text x="35.2143%" y="767.50"></text></g><g><title>web_crawler`tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.10%)</title><rect x="34.9643%" y="741" width="0.1019%" height="15" fill="rgb(226,155,13)" fg:x="343" fg:w="1"/><text x="35.2143%" y="751.50"></text></g><g><title>web_crawler`std::sys::unix::thread::Thread::new (1 samples, 0.10%)</title><rect x="34.9643%" y="725" width="0.1019%" height="15" fill="rgb(241,28,37)" fg:x="343" fg:w="1"/><text x="35.2143%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 0.10%)</title><rect x="34.9643%" y="709" width="0.1019%" height="15" fill="rgb(233,93,10)" fg:x="343" fg:w="1"/><text x="35.2143%" y="719.50"></text></g><g><title>web_crawler`&lt;scraper::html::Select as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="35.0663%" y="981" width="0.1019%" height="15" fill="rgb(225,113,19)" fg:x="344" fg:w="1"/><text x="35.3163%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.10%)</title><rect x="35.1682%" y="965" width="0.1019%" height="15" fill="rgb(241,2,18)" fg:x="345" fg:w="1"/><text x="35.4182%" y="975.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;scraper::html::Html&gt; (2 samples, 0.20%)</title><rect x="35.1682%" y="981" width="0.2039%" height="15" fill="rgb(228,207,21)" fg:x="345" fg:w="2"/><text x="35.4182%" y="991.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;ego_tree::Node&lt;scraper::node::Node&gt;&gt; (1 samples, 0.10%)</title><rect x="35.2701%" y="965" width="0.1019%" height="15" fill="rgb(213,211,35)" fg:x="346" fg:w="1"/><text x="35.5201%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.10%)</title><rect x="35.2701%" y="949" width="0.1019%" height="15" fill="rgb(209,83,10)" fg:x="346" fg:w="1"/><text x="35.5201%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.10%)</title><rect x="35.2701%" y="933" width="0.1019%" height="15" fill="rgb(209,164,1)" fg:x="346" fg:w="1"/><text x="35.5201%" y="943.50"></text></g><g><title>web_crawler`ego_tree::NodeId::from_index (1 samples, 0.10%)</title><rect x="35.3721%" y="981" width="0.1019%" height="15" fill="rgb(213,184,43)" fg:x="347" fg:w="1"/><text x="35.6221%" y="991.50"></text></g><g><title>web_crawler`reqwest::async_impl::client::Client::post (1 samples, 0.10%)</title><rect x="35.4740%" y="981" width="0.1019%" height="15" fill="rgb(231,61,34)" fg:x="348" fg:w="1"/><text x="35.7240%" y="991.50"></text></g><g><title>web_crawler`&lt;&amp;str as reqwest::into_url::IntoUrlSealed&gt;::into_url (1 samples, 0.10%)</title><rect x="35.4740%" y="965" width="0.1019%" height="15" fill="rgb(235,75,3)" fg:x="348" fg:w="1"/><text x="35.7240%" y="975.50"></text></g><g><title>web_crawler`url::ParseOptions::parse (1 samples, 0.10%)</title><rect x="35.4740%" y="949" width="0.1019%" height="15" fill="rgb(220,106,47)" fg:x="348" fg:w="1"/><text x="35.7240%" y="959.50"></text></g><g><title>web_crawler`core::str::_&lt;impl str&gt;::trim_matches (1 samples, 0.10%)</title><rect x="35.4740%" y="933" width="0.1019%" height="15" fill="rgb(210,196,33)" fg:x="348" fg:w="1"/><text x="35.7240%" y="943.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::emit_char (1 samples, 0.10%)</title><rect x="35.7798%" y="917" width="0.1019%" height="15" fill="rgb(229,154,42)" fg:x="351" fg:w="1"/><text x="36.0298%" y="927.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_token (1 samples, 0.10%)</title><rect x="35.7798%" y="901" width="0.1019%" height="15" fill="rgb(228,114,26)" fg:x="351" fg:w="1"/><text x="36.0298%" y="911.50"></text></g><g><title>web_crawler`&lt;html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt; as html5ever::tokenizer::interface::TokenSink&gt;::process_token (1 samples, 0.10%)</title><rect x="35.7798%" y="885" width="0.1019%" height="15" fill="rgb(208,144,1)" fg:x="351" fg:w="1"/><text x="36.0298%" y="895.50"></text></g><g><title>web_crawler`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (1 samples, 0.10%)</title><rect x="35.7798%" y="869" width="0.1019%" height="15" fill="rgb(239,112,37)" fg:x="351" fg:w="1"/><text x="36.0298%" y="879.50"></text></g><g><title>web_crawler`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::reconstruct_formatting (1 samples, 0.10%)</title><rect x="35.7798%" y="853" width="0.1019%" height="15" fill="rgb(210,96,50)" fg:x="351" fg:w="1"/><text x="36.0298%" y="863.50"></text></g><g><title>web_crawler`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="35.9837%" y="853" width="0.1019%" height="15" fill="rgb(222,178,2)" fg:x="353" fg:w="1"/><text x="36.2337%" y="863.50"></text></g><g><title>web_crawler`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="35.9837%" y="837" width="0.1019%" height="15" fill="rgb(226,74,18)" fg:x="353" fg:w="1"/><text x="36.2337%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="35.9837%" y="821" width="0.1019%" height="15" fill="rgb(225,67,54)" fg:x="353" fg:w="1"/><text x="36.2337%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.10%)</title><rect x="35.9837%" y="805" width="0.1019%" height="15" fill="rgb(251,92,32)" fg:x="353" fg:w="1"/><text x="36.2337%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.10%)</title><rect x="35.9837%" y="789" width="0.1019%" height="15" fill="rgb(228,149,22)" fg:x="353" fg:w="1"/><text x="36.2337%" y="799.50"></text></g><g><title>web_crawler`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="36.0856%" y="837" width="0.1019%" height="15" fill="rgb(243,54,13)" fg:x="354" fg:w="1"/><text x="36.3356%" y="847.50"></text></g><g><title>web_crawler`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="36.0856%" y="821" width="0.1019%" height="15" fill="rgb(243,180,28)" fg:x="354" fg:w="1"/><text x="36.3356%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.10%)</title><rect x="36.0856%" y="805" width="0.1019%" height="15" fill="rgb(208,167,24)" fg:x="354" fg:w="1"/><text x="36.3356%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.10%)</title><rect x="36.0856%" y="789" width="0.1019%" height="15" fill="rgb(245,73,45)" fg:x="354" fg:w="1"/><text x="36.3356%" y="799.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::emit_current_tag (5 samples, 0.51%)</title><rect x="35.8818%" y="917" width="0.5097%" height="15" fill="rgb(237,203,48)" fg:x="352" fg:w="5"/><text x="36.1318%" y="927.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_token (5 samples, 0.51%)</title><rect x="35.8818%" y="901" width="0.5097%" height="15" fill="rgb(211,197,16)" fg:x="352" fg:w="5"/><text x="36.1318%" y="911.50"></text></g><g><title>web_crawler`&lt;html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt; as html5ever::tokenizer::interface::TokenSink&gt;::process_token (5 samples, 0.51%)</title><rect x="35.8818%" y="885" width="0.5097%" height="15" fill="rgb(243,99,51)" fg:x="352" fg:w="5"/><text x="36.1318%" y="895.50"></text></g><g><title>web_crawler`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (4 samples, 0.41%)</title><rect x="35.9837%" y="869" width="0.4077%" height="15" fill="rgb(215,123,29)" fg:x="353" fg:w="4"/><text x="36.2337%" y="879.50"></text></g><g><title>web_crawler`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element (3 samples, 0.31%)</title><rect x="36.0856%" y="853" width="0.3058%" height="15" fill="rgb(239,186,37)" fg:x="354" fg:w="3"/><text x="36.3356%" y="863.50"></text></g><g><title>web_crawler`markup5ever::interface::tree_builder::create_element (2 samples, 0.20%)</title><rect x="36.1876%" y="837" width="0.2039%" height="15" fill="rgb(252,136,39)" fg:x="355" fg:w="2"/><text x="36.4376%" y="847.50"></text></g><g><title>web_crawler`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (2 samples, 0.20%)</title><rect x="36.1876%" y="821" width="0.2039%" height="15" fill="rgb(223,213,32)" fg:x="355" fg:w="2"/><text x="36.4376%" y="831.50"></text></g><g><title>web_crawler`scraper::node::Element::new (2 samples, 0.20%)</title><rect x="36.1876%" y="805" width="0.2039%" height="15" fill="rgb(233,115,5)" fg:x="355" fg:w="2"/><text x="36.4376%" y="815.50"></text></g><g><title>web_crawler`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="36.1876%" y="789" width="0.2039%" height="15" fill="rgb(207,226,44)" fg:x="355" fg:w="2"/><text x="36.4376%" y="799.50"></text></g><g><title>web_crawler`string_cache::dynamic_set::Set::insert (1 samples, 0.10%)</title><rect x="36.2895%" y="773" width="0.1019%" height="15" fill="rgb(208,126,0)" fg:x="356" fg:w="1"/><text x="36.5395%" y="783.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::get_char (1 samples, 0.10%)</title><rect x="36.3914%" y="917" width="0.1019%" height="15" fill="rgb(244,66,21)" fg:x="357" fg:w="1"/><text x="36.6414%" y="927.50"></text></g><g><title>web_crawler`markup5ever::util::buffer_queue::BufferQueue::next (1 samples, 0.10%)</title><rect x="36.3914%" y="901" width="0.1019%" height="15" fill="rgb(222,97,12)" fg:x="357" fg:w="1"/><text x="36.6414%" y="911.50"></text></g><g><title>web_crawler`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (1 samples, 0.10%)</title><rect x="36.3914%" y="885" width="0.1019%" height="15" fill="rgb(219,213,19)" fg:x="357" fg:w="1"/><text x="36.6414%" y="895.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_token (1 samples, 0.10%)</title><rect x="36.4934%" y="917" width="0.1019%" height="15" fill="rgb(252,169,30)" fg:x="358" fg:w="1"/><text x="36.7434%" y="927.50"></text></g><g><title>web_crawler`&lt;html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt; as html5ever::tokenizer::interface::TokenSink&gt;::process_token (1 samples, 0.10%)</title><rect x="36.4934%" y="901" width="0.1019%" height="15" fill="rgb(206,32,51)" fg:x="358" fg:w="1"/><text x="36.7434%" y="911.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::step (12 samples, 1.22%)</title><rect x="35.5759%" y="933" width="1.2232%" height="15" fill="rgb(250,172,42)" fg:x="349" fg:w="12"/><text x="35.8259%" y="943.50"></text></g><g><title>web_crawler`markup5ever::util::buffer_queue::BufferQueue::next (2 samples, 0.20%)</title><rect x="36.5953%" y="917" width="0.2039%" height="15" fill="rgb(209,34,43)" fg:x="359" fg:w="2"/><text x="36.8453%" y="927.50"></text></g><g><title>web_crawler`scraper::html::Html::parse_document (13 samples, 1.33%)</title><rect x="35.5759%" y="981" width="1.3252%" height="15" fill="rgb(223,11,35)" fg:x="349" fg:w="13"/><text x="35.8259%" y="991.50"></text></g><g><title>web_crawler`tendril::stream::TendrilSink::one (13 samples, 1.33%)</title><rect x="35.5759%" y="965" width="1.3252%" height="15" fill="rgb(251,219,26)" fg:x="349" fg:w="13"/><text x="35.8259%" y="975.50"></text></g><g><title>web_crawler`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::run (13 samples, 1.33%)</title><rect x="35.5759%" y="949" width="1.3252%" height="15" fill="rgb(231,119,3)" fg:x="349" fg:w="13"/><text x="35.8259%" y="959.50"></text></g><g><title>web_crawler`html5ever::util::str::lower_ascii_letter (1 samples, 0.10%)</title><rect x="36.7992%" y="933" width="0.1019%" height="15" fill="rgb(216,97,11)" fg:x="361" fg:w="1"/><text x="37.0492%" y="943.50"></text></g><g><title>web_crawler`web_crawler::actions::scrap_messages::scrap_message::_{{closure}} (54 samples, 5.50%)</title><rect x="31.4985%" y="997" width="5.5046%" height="15" fill="rgb(223,59,9)" fg:x="309" fg:w="54"/><text x="31.7485%" y="1007.50">web_cra..</text></g><g><title>web_crawler`std::io::stdio::_print (1 samples, 0.10%)</title><rect x="36.9011%" y="981" width="0.1019%" height="15" fill="rgb(233,93,31)" fg:x="362" fg:w="1"/><text x="37.1511%" y="991.50"></text></g><g><title>web_crawler`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.10%)</title><rect x="36.9011%" y="965" width="0.1019%" height="15" fill="rgb(239,81,33)" fg:x="362" fg:w="1"/><text x="37.1511%" y="975.50"></text></g><g><title>web_crawler`core::fmt::write (1 samples, 0.10%)</title><rect x="36.9011%" y="949" width="0.1019%" height="15" fill="rgb(213,120,34)" fg:x="362" fg:w="1"/><text x="37.1511%" y="959.50"></text></g><g><title>web_crawler`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="36.9011%" y="933" width="0.1019%" height="15" fill="rgb(243,49,53)" fg:x="362" fg:w="1"/><text x="37.1511%" y="943.50"></text></g><g><title>web_crawler`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.10%)</title><rect x="36.9011%" y="917" width="0.1019%" height="15" fill="rgb(247,216,33)" fg:x="362" fg:w="1"/><text x="37.1511%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.10%)</title><rect x="36.9011%" y="901" width="0.1019%" height="15" fill="rgb(226,26,14)" fg:x="362" fg:w="1"/><text x="37.1511%" y="911.50"></text></g><g><title>web_crawler`&lt;playwright::imp::playwright::WaitInitialObject as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="37.6147%" y="981" width="0.1019%" height="15" fill="rgb(215,49,53)" fg:x="369" fg:w="1"/><text x="37.8647%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_trylock (10 samples, 1.02%)</title><rect x="40.5708%" y="965" width="1.0194%" height="15" fill="rgb(245,162,40)" fg:x="398" fg:w="10"/><text x="40.8208%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.20%)</title><rect x="43.8328%" y="949" width="0.2039%" height="15" fill="rgb(229,68,17)" fg:x="430" fg:w="2"/><text x="44.0828%" y="959.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;playwright::imp::core::connection::Error&gt; (4 samples, 0.41%)</title><rect x="44.0367%" y="949" width="0.4077%" height="15" fill="rgb(213,182,10)" fg:x="432" fg:w="4"/><text x="44.2867%" y="959.50"></text></g><g><title>web_crawler`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 1.43%)</title><rect x="45.2599%" y="933" width="1.4271%" height="15" fill="rgb(245,125,30)" fg:x="444" fg:w="14"/><text x="45.5099%" y="943.50"></text></g><g><title>web_crawler`playwright::imp::core::connection::Context::find_object (37 samples, 3.77%)</title><rect x="44.4444%" y="949" width="3.7717%" height="15" fill="rgb(232,202,2)" fg:x="436" fg:w="37"/><text x="44.6944%" y="959.50">web_..</text></g><g><title>web_crawler`core::hash::BuildHasher::hash_one (15 samples, 1.53%)</title><rect x="46.6871%" y="933" width="1.5291%" height="15" fill="rgb(237,140,51)" fg:x="458" fg:w="15"/><text x="46.9371%" y="943.50"></text></g><g><title>web_crawler`std::sys::unix::time::Timespec::sub_timespec (3 samples, 0.31%)</title><rect x="48.2161%" y="949" width="0.3058%" height="15" fill="rgb(236,157,25)" fg:x="473" fg:w="3"/><text x="48.4661%" y="959.50"></text></g><g><title>web_crawler`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.10%)</title><rect x="48.5219%" y="949" width="0.1019%" height="15" fill="rgb(219,209,0)" fg:x="476" fg:w="1"/><text x="48.7719%" y="959.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (3 samples, 0.31%)</title><rect x="48.7258%" y="933" width="0.3058%" height="15" fill="rgb(240,116,54)" fg:x="478" fg:w="3"/><text x="48.9758%" y="943.50"></text></g><g><title>web_crawler`DYLD-STUB$$clock_gettime (2 samples, 0.20%)</title><rect x="49.0316%" y="933" width="0.2039%" height="15" fill="rgb(216,10,36)" fg:x="481" fg:w="2"/><text x="49.2816%" y="943.50"></text></g><g><title>web_crawler`std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.10%)</title><rect x="49.2355%" y="933" width="0.1019%" height="15" fill="rgb(222,72,44)" fg:x="483" fg:w="1"/><text x="49.4855%" y="943.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_absolute_time (2 samples, 0.20%)</title><rect x="49.6432%" y="901" width="0.2039%" height="15" fill="rgb(232,159,9)" fg:x="487" fg:w="2"/><text x="49.8932%" y="911.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (16 samples, 1.63%)</title><rect x="49.8471%" y="901" width="1.6310%" height="15" fill="rgb(210,39,32)" fg:x="489" fg:w="16"/><text x="50.0971%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (6 samples, 0.61%)</title><rect x="50.8665%" y="885" width="0.6116%" height="15" fill="rgb(216,194,45)" fg:x="499" fg:w="6"/><text x="51.1165%" y="895.50"></text></g><g><title>web_crawler`std::time::Instant::elapsed (159 samples, 16.21%)</title><rect x="48.6239%" y="949" width="16.2080%" height="15" fill="rgb(218,18,35)" fg:x="477" fg:w="159"/><text x="48.8739%" y="959.50">web_crawler`std::time::In..</text></g><g><title>web_crawler`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (152 samples, 15.49%)</title><rect x="49.3374%" y="933" width="15.4944%" height="15" fill="rgb(207,83,51)" fg:x="484" fg:w="152"/><text x="49.5874%" y="943.50">web_crawler`std::sys::un..</text></g><g><title>libsystem_c.dylib`clock_gettime (152 samples, 15.49%)</title><rect x="49.3374%" y="917" width="15.4944%" height="15" fill="rgb(225,63,43)" fg:x="484" fg:w="152"/><text x="49.5874%" y="927.50">libsystem_c.dylib`clock_..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (131 samples, 13.35%)</title><rect x="51.4781%" y="901" width="13.3537%" height="15" fill="rgb(207,57,36)" fg:x="505" fg:w="131"/><text x="51.7281%" y="911.50">libsystem_kernel.dyl..</text></g><g><title>web_crawler`&lt;playwright::imp::playwright::WaitInitialObject as core::future::future::Future&gt;::poll (235 samples, 23.96%)</title><rect x="41.5902%" y="965" width="23.9551%" height="15" fill="rgb(216,99,33)" fg:x="408" fg:w="235"/><text x="41.8402%" y="975.50">web_crawler`&lt;playwright::imp::playwrig..</text></g><g><title>web_crawler`tokio::runtime::task::waker::wake_by_ref (7 samples, 0.71%)</title><rect x="64.8318%" y="949" width="0.7136%" height="15" fill="rgb(225,42,16)" fg:x="636" fg:w="7"/><text x="65.0818%" y="959.50"></text></g><g><title>web_crawler`DYLD-STUB$$pthread_mutex_trylock (2 samples, 0.20%)</title><rect x="65.5454%" y="965" width="0.2039%" height="15" fill="rgb(220,201,45)" fg:x="643" fg:w="2"/><text x="65.7954%" y="975.50"></text></g><g><title>web_crawler`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.10%)</title><rect x="65.7492%" y="965" width="0.1019%" height="15" fill="rgb(225,33,4)" fg:x="645" fg:w="1"/><text x="65.9992%" y="975.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;playwright::imp::core::connection::Error&gt; (5 samples, 0.51%)</title><rect x="65.8512%" y="965" width="0.5097%" height="15" fill="rgb(224,33,50)" fg:x="646" fg:w="5"/><text x="66.1012%" y="975.50"></text></g><g><title>web_crawler`playwright::imp::core::connection::Context::find_object (2 samples, 0.20%)</title><rect x="66.3609%" y="965" width="0.2039%" height="15" fill="rgb(246,198,51)" fg:x="651" fg:w="2"/><text x="66.6109%" y="975.50"></text></g><g><title>web_crawler`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (402 samples, 40.98%)</title><rect x="25.8919%" y="1013" width="40.9786%" height="15" fill="rgb(205,22,4)" fg:x="254" fg:w="402"/><text x="26.1419%" y="1023.50">web_crawler`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>web_crawler`web_crawler::actions::start_browser::start_browser::_{{closure}} (293 samples, 29.87%)</title><rect x="37.0031%" y="997" width="29.8675%" height="15" fill="rgb(206,3,8)" fg:x="363" fg:w="293"/><text x="37.2531%" y="1007.50">web_crawler`web_crawler::actions::start_browser:..</text></g><g><title>web_crawler`playwright::api::playwright::Playwright::initialize::_{{closure}} (286 samples, 29.15%)</title><rect x="37.7166%" y="981" width="29.1539%" height="15" fill="rgb(251,23,15)" fg:x="370" fg:w="286"/><text x="37.9666%" y="991.50">web_crawler`playwright::api::playwright::Playwr..</text></g><g><title>web_crawler`std::time::Instant::elapsed (3 samples, 0.31%)</title><rect x="66.5647%" y="965" width="0.3058%" height="15" fill="rgb(252,88,28)" fg:x="653" fg:w="3"/><text x="66.8147%" y="975.50"></text></g><g><title>web_crawler`tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.20%)</title><rect x="66.8705%" y="1013" width="0.2039%" height="15" fill="rgb(212,127,14)" fg:x="656" fg:w="2"/><text x="67.1205%" y="1023.50"></text></g><g><title>web_crawler`tokio::time::interval::Interval::poll_tick (1 samples, 0.10%)</title><rect x="67.0744%" y="1013" width="0.1019%" height="15" fill="rgb(247,145,37)" fg:x="658" fg:w="1"/><text x="67.3244%" y="1023.50"></text></g><g><title>web_crawler`tokio::runtime::time::entry::TimerEntry::reset (1 samples, 0.10%)</title><rect x="67.0744%" y="997" width="0.1019%" height="15" fill="rgb(209,117,53)" fg:x="658" fg:w="1"/><text x="67.3244%" y="1007.50"></text></g><g><title>web_crawler`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1 samples, 0.10%)</title><rect x="67.0744%" y="981" width="0.1019%" height="15" fill="rgb(212,90,42)" fg:x="658" fg:w="1"/><text x="67.3244%" y="991.50"></text></g><g><title>web_crawler`tokio::runtime::driver::IoHandle::unpark (1 samples, 0.10%)</title><rect x="67.0744%" y="965" width="0.1019%" height="15" fill="rgb(218,164,37)" fg:x="658" fg:w="1"/><text x="67.3244%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.10%)</title><rect x="67.0744%" y="949" width="0.1019%" height="15" fill="rgb(246,65,34)" fg:x="658" fg:w="1"/><text x="67.3244%" y="959.50"></text></g><g><title>web_crawler`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (409 samples, 41.69%)</title><rect x="25.6881%" y="1029" width="41.6922%" height="15" fill="rgb(231,100,33)" fg:x="252" fg:w="409"/><text x="25.9381%" y="1039.50">web_crawler`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>web_crawler`web_crawler::actions::start_browser::start_browser::_{{closure}} (2 samples, 0.20%)</title><rect x="67.1764%" y="1013" width="0.2039%" height="15" fill="rgb(228,126,14)" fg:x="659" fg:w="2"/><text x="67.4264%" y="1023.50"></text></g><g><title>web_crawler`tokio::runtime::task::state::State::transition_to_running (8 samples, 0.82%)</title><rect x="67.3802%" y="1029" width="0.8155%" height="15" fill="rgb(215,173,21)" fg:x="661" fg:w="8"/><text x="67.6302%" y="1039.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.10%)</title><rect x="68.5015%" y="997" width="0.1019%" height="15" fill="rgb(210,6,40)" fg:x="672" fg:w="1"/><text x="68.7515%" y="1007.50"></text></g><g><title>web_crawler`std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.92%)</title><rect x="68.1957%" y="1013" width="0.9174%" height="15" fill="rgb(212,48,18)" fg:x="669" fg:w="9"/><text x="68.4457%" y="1023.50"></text></g><g><title>web_crawler`tokio::task::local::CURRENT::__getit (5 samples, 0.51%)</title><rect x="68.6035%" y="997" width="0.5097%" height="15" fill="rgb(230,214,11)" fg:x="673" fg:w="5"/><text x="68.8535%" y="1007.50"></text></g><g><title>web_crawler`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (444 samples, 45.26%)</title><rect x="23.9551%" y="1045" width="45.2599%" height="15" fill="rgb(254,105,39)" fg:x="235" fg:w="444"/><text x="24.2051%" y="1055.50">web_crawler`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>web_crawler`tokio::task::local::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::schedule (10 samples, 1.02%)</title><rect x="68.1957%" y="1029" width="1.0194%" height="15" fill="rgb(245,158,5)" fg:x="669" fg:w="10"/><text x="68.4457%" y="1039.50"></text></g><g><title>web_crawler`tokio::task::local::CURRENT::__getit (1 samples, 0.10%)</title><rect x="69.1131%" y="1013" width="0.1019%" height="15" fill="rgb(249,208,11)" fg:x="678" fg:w="1"/><text x="69.3631%" y="1023.50"></text></g><g><title>web_crawler`tokio::task::local::LocalSet::tick (452 samples, 46.08%)</title><rect x="23.2416%" y="1061" width="46.0754%" height="15" fill="rgb(210,39,28)" fg:x="228" fg:w="452"/><text x="23.4916%" y="1071.50">web_crawler`tokio::task::local::LocalSet::tick</text></g><g><title>web_crawler`tokio::runtime::task::waker::raw_waker (1 samples, 0.10%)</title><rect x="69.2151%" y="1045" width="0.1019%" height="15" fill="rgb(211,56,53)" fg:x="679" fg:w="1"/><text x="69.4651%" y="1055.50"></text></g><g><title>web_crawler`tokio::runtime::scheduler::current_thread::Context::enter (493 samples, 50.25%)</title><rect x="19.1641%" y="1109" width="50.2548%" height="15" fill="rgb(226,201,30)" fg:x="188" fg:w="493"/><text x="19.4141%" y="1119.50">web_crawler`tokio::runtime::scheduler::current_thread::Context::enter</text></g><g><title>web_crawler`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (492 samples, 50.15%)</title><rect x="19.2661%" y="1093" width="50.1529%" height="15" fill="rgb(239,101,34)" fg:x="189" fg:w="492"/><text x="19.5161%" y="1103.50">web_crawler`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>web_crawler`std::thread::local::LocalKey&lt;T&gt;::with (492 samples, 50.15%)</title><rect x="19.2661%" y="1077" width="50.1529%" height="15" fill="rgb(226,209,5)" fg:x="189" fg:w="492"/><text x="19.5161%" y="1087.50">web_crawler`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>web_crawler`tokio::util::wake::clone_arc_raw (1 samples, 0.10%)</title><rect x="69.3170%" y="1061" width="0.1019%" height="15" fill="rgb(250,105,47)" fg:x="680" fg:w="1"/><text x="69.5670%" y="1071.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.10%)</title><rect x="69.4190%" y="1093" width="0.1019%" height="15" fill="rgb(230,72,3)" fg:x="681" fg:w="1"/><text x="69.6690%" y="1103.50"></text></g><g><title>web_crawler`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.10%)</title><rect x="69.5209%" y="1093" width="0.1019%" height="15" fill="rgb(232,218,39)" fg:x="682" fg:w="1"/><text x="69.7709%" y="1103.50"></text></g><g><title>web_crawler`tokio::runtime::context::with_defer (3 samples, 0.31%)</title><rect x="69.6228%" y="1093" width="0.3058%" height="15" fill="rgb(248,166,6)" fg:x="683" fg:w="3"/><text x="69.8728%" y="1103.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (2 samples, 0.20%)</title><rect x="70.2345%" y="1077" width="0.2039%" height="15" fill="rgb(247,89,20)" fg:x="689" fg:w="2"/><text x="70.4845%" y="1087.50"></text></g><g><title>web_crawler`DYLD-STUB$$clock_gettime (4 samples, 0.41%)</title><rect x="70.4383%" y="1077" width="0.4077%" height="15" fill="rgb(248,130,54)" fg:x="691" fg:w="4"/><text x="70.6883%" y="1087.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.10%)</title><rect x="70.8461%" y="1045" width="0.1019%" height="15" fill="rgb(234,196,4)" fg:x="695" fg:w="1"/><text x="71.0961%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (5 samples, 0.51%)</title><rect x="70.9480%" y="1045" width="0.5097%" height="15" fill="rgb(250,143,31)" fg:x="696" fg:w="5"/><text x="71.1980%" y="1055.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (8 samples, 0.82%)</title><rect x="70.8461%" y="1061" width="0.8155%" height="15" fill="rgb(211,110,34)" fg:x="695" fg:w="8"/><text x="71.0961%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (2 samples, 0.20%)</title><rect x="71.4577%" y="1045" width="0.2039%" height="15" fill="rgb(215,124,48)" fg:x="701" fg:w="2"/><text x="71.7077%" y="1055.50"></text></g><g><title>web_crawler`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (9 samples, 0.92%)</title><rect x="70.8461%" y="1077" width="0.9174%" height="15" fill="rgb(216,46,13)" fg:x="695" fg:w="9"/><text x="71.0961%" y="1087.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.10%)</title><rect x="71.6616%" y="1061" width="0.1019%" height="15" fill="rgb(205,184,25)" fg:x="703" fg:w="1"/><text x="71.9116%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`kevent (219 samples, 22.32%)</title><rect x="72.6809%" y="1061" width="22.3242%" height="15" fill="rgb(228,1,10)" fg:x="713" fg:w="219"/><text x="72.9309%" y="1071.50">libsystem_kernel.dylib`kevent</text></g><g><title>web_crawler`tokio::runtime::io::Driver::turn (233 samples, 23.75%)</title><rect x="71.7635%" y="1077" width="23.7513%" height="15" fill="rgb(213,116,27)" fg:x="704" fg:w="233"/><text x="72.0135%" y="1087.50">web_crawler`tokio::runtime::io::Driver..</text></g><g><title>web_crawler`mio::poll::Poll::poll (5 samples, 0.51%)</title><rect x="95.0051%" y="1061" width="0.5097%" height="15" fill="rgb(241,95,50)" fg:x="932" fg:w="5"/><text x="95.2551%" y="1071.50"></text></g><g><title>web_crawler`tokio::runtime::signal::Driver::process (2 samples, 0.20%)</title><rect x="95.5148%" y="1077" width="0.2039%" height="15" fill="rgb(238,48,32)" fg:x="937" fg:w="2"/><text x="95.7648%" y="1087.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (3 samples, 0.31%)</title><rect x="96.6361%" y="1061" width="0.3058%" height="15" fill="rgb(235,113,49)" fg:x="948" fg:w="3"/><text x="96.8861%" y="1071.50"></text></g><g><title> 32]&gt; (3 samples, 0.31%)</title><rect x="96.6361%" y="1045" width="0.3058%" height="15" fill="rgb(205,127,43)" fg:x="948" fg:w="3"/><text x="96.8861%" y="1055.50"></text></g><g><title>web_crawler`tokio::runtime::task::raw::schedule (1 samples, 0.10%)</title><rect x="96.9419%" y="1061" width="0.1019%" height="15" fill="rgb(250,162,2)" fg:x="951" fg:w="1"/><text x="97.1919%" y="1071.50"></text></g><g><title>web_crawler`tokio::runtime::driver::Handle::unpark (1 samples, 0.10%)</title><rect x="97.4516%" y="1013" width="0.1019%" height="15" fill="rgb(220,13,41)" fg:x="956" fg:w="1"/><text x="97.7016%" y="1023.50"></text></g><g><title>web_crawler`tokio::task::local::CURRENT::__getit (1 samples, 0.10%)</title><rect x="97.5535%" y="1013" width="0.1019%" height="15" fill="rgb(249,221,25)" fg:x="957" fg:w="1"/><text x="97.8035%" y="1023.50"></text></g><g><title>web_crawler`tokio::runtime::task::waker::wake_by_val (13 samples, 1.33%)</title><rect x="97.0438%" y="1061" width="1.3252%" height="15" fill="rgb(215,208,19)" fg:x="952" fg:w="13"/><text x="97.2938%" y="1071.50"></text></g><g><title>web_crawler`tokio::task::local::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::schedule (13 samples, 1.33%)</title><rect x="97.0438%" y="1045" width="1.3252%" height="15" fill="rgb(236,175,2)" fg:x="952" fg:w="13"/><text x="97.2938%" y="1055.50"></text></g><g><title>web_crawler`std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 1.33%)</title><rect x="97.0438%" y="1029" width="1.3252%" height="15" fill="rgb(241,52,2)" fg:x="952" fg:w="13"/><text x="97.2938%" y="1039.50"></text></g><g><title>web_crawler`tokio::util::wake::wake_arc_raw (7 samples, 0.71%)</title><rect x="97.6555%" y="1013" width="0.7136%" height="15" fill="rgb(248,140,14)" fg:x="958" fg:w="7"/><text x="97.9055%" y="1023.50"></text></g><g><title>web_crawler`tokio::runtime::driver::Handle::unpark (7 samples, 0.71%)</title><rect x="97.6555%" y="997" width="0.7136%" height="15" fill="rgb(253,22,42)" fg:x="958" fg:w="7"/><text x="97.9055%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`kevent (7 samples, 0.71%)</title><rect x="97.6555%" y="981" width="0.7136%" height="15" fill="rgb(234,61,47)" fg:x="958" fg:w="7"/><text x="97.9055%" y="991.50"></text></g><g><title>web_crawler`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (31 samples, 3.16%)</title><rect x="95.7187%" y="1077" width="3.1600%" height="15" fill="rgb(208,226,15)" fg:x="939" fg:w="31"/><text x="95.9687%" y="1087.50">web..</text></g><g><title>web_crawler`tokio::runtime::time::wheel::Wheel::next_expiration (5 samples, 0.51%)</title><rect x="98.3690%" y="1061" width="0.5097%" height="15" fill="rgb(217,221,4)" fg:x="965" fg:w="5"/><text x="98.6190%" y="1071.50"></text></g><g><title>web_crawler`tokio::runtime::time::wheel::level::Level::next_expiration (4 samples, 0.41%)</title><rect x="98.4709%" y="1045" width="0.4077%" height="15" fill="rgb(212,174,34)" fg:x="966" fg:w="4"/><text x="98.7209%" y="1055.50"></text></g><g><title>web_crawler`tokio::runtime::scheduler::current_thread::Context::park (290 samples, 29.56%)</title><rect x="69.4190%" y="1109" width="29.5617%" height="15" fill="rgb(253,83,4)" fg:x="681" fg:w="290"/><text x="69.6690%" y="1119.50">web_crawler`tokio::runtime::scheduler::current_t..</text></g><g><title>web_crawler`tokio::runtime::time::Driver::park_internal (285 samples, 29.05%)</title><rect x="69.9286%" y="1093" width="29.0520%" height="15" fill="rgb(250,195,49)" fg:x="686" fg:w="285"/><text x="70.1786%" y="1103.50">web_crawler`tokio::runtime::time::Driver::park_..</text></g><g><title>web_crawler`tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.10%)</title><rect x="98.8787%" y="1077" width="0.1019%" height="15" fill="rgb(241,192,25)" fg:x="970" fg:w="1"/><text x="99.1287%" y="1087.50"></text></g><g><title>web_crawler`&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (1 samples, 0.10%)</title><rect x="99.0826%" y="981" width="0.1019%" height="15" fill="rgb(208,124,10)" fg:x="972" fg:w="1"/><text x="99.3326%" y="991.50"></text></g><g><title>web_crawler`hyper::client::dispatch::Callback&lt;T,U&gt;::send (1 samples, 0.10%)</title><rect x="99.0826%" y="965" width="0.1019%" height="15" fill="rgb(222,33,0)" fg:x="972" fg:w="1"/><text x="99.3326%" y="975.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;hyper::client::dispatch::Callback&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="99.0826%" y="949" width="0.1019%" height="15" fill="rgb(234,209,28)" fg:x="972" fg:w="1"/><text x="99.3326%" y="959.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn core::error::Error+core::marker::Send+core::marker::Sync&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from::StringError&gt; (1 samples, 0.10%)</title><rect x="99.0826%" y="933" width="0.1019%" height="15" fill="rgb(224,11,23)" fg:x="972" fg:w="1"/><text x="99.3326%" y="943.50"></text></g><g><title>Security`DYLD-STUB$$tls_handshake_continue (1 samples, 0.10%)</title><rect x="99.1845%" y="917" width="0.1019%" height="15" fill="rgb(232,99,1)" fg:x="973" fg:w="1"/><text x="99.4345%" y="927.50"></text></g><g><title>web_crawler`&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (4 samples, 0.41%)</title><rect x="98.9806%" y="1029" width="0.4077%" height="15" fill="rgb(237,95,45)" fg:x="971" fg:w="4"/><text x="99.2306%" y="1039.50"></text></g><g><title>web_crawler`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (4 samples, 0.41%)</title><rect x="98.9806%" y="1013" width="0.4077%" height="15" fill="rgb(208,109,11)" fg:x="971" fg:w="4"/><text x="99.2306%" y="1023.50"></text></g><g><title>web_crawler`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (4 samples, 0.41%)</title><rect x="98.9806%" y="997" width="0.4077%" height="15" fill="rgb(216,190,48)" fg:x="971" fg:w="4"/><text x="99.2306%" y="1007.50"></text></g><g><title>web_crawler`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (2 samples, 0.20%)</title><rect x="99.1845%" y="981" width="0.2039%" height="15" fill="rgb(251,171,36)" fg:x="973" fg:w="2"/><text x="99.4345%" y="991.50"></text></g><g><title>web_crawler`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (2 samples, 0.20%)</title><rect x="99.1845%" y="965" width="0.2039%" height="15" fill="rgb(230,62,22)" fg:x="973" fg:w="2"/><text x="99.4345%" y="975.50"></text></g><g><title>web_crawler`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (2 samples, 0.20%)</title><rect x="99.1845%" y="949" width="0.2039%" height="15" fill="rgb(225,114,35)" fg:x="973" fg:w="2"/><text x="99.4345%" y="959.50"></text></g><g><title>web_crawler`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.20%)</title><rect x="99.1845%" y="933" width="0.2039%" height="15" fill="rgb(215,118,42)" fg:x="973" fg:w="2"/><text x="99.4345%" y="943.50"></text></g><g><title>Security`SSLRead (1 samples, 0.10%)</title><rect x="99.2864%" y="917" width="0.1019%" height="15" fill="rgb(243,119,21)" fg:x="974" fg:w="1"/><text x="99.5364%" y="927.50"></text></g><g><title>Security`SSLRecordReadInternal (1 samples, 0.10%)</title><rect x="99.2864%" y="901" width="0.1019%" height="15" fill="rgb(252,177,53)" fg:x="974" fg:w="1"/><text x="99.5364%" y="911.50"></text></g><g><title>web_crawler`security_framework::secure_transport::read_func (1 samples, 0.10%)</title><rect x="99.2864%" y="885" width="0.1019%" height="15" fill="rgb(237,209,29)" fg:x="974" fg:w="1"/><text x="99.5364%" y="895.50"></text></g><g><title>web_crawler`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.10%)</title><rect x="99.2864%" y="869" width="0.1019%" height="15" fill="rgb(212,65,23)" fg:x="974" fg:w="1"/><text x="99.5364%" y="879.50"></text></g><g><title>web_crawler`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.10%)</title><rect x="99.2864%" y="853" width="0.1019%" height="15" fill="rgb(230,222,46)" fg:x="974" fg:w="1"/><text x="99.5364%" y="863.50"></text></g><g><title>web_crawler`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.10%)</title><rect x="99.2864%" y="837" width="0.1019%" height="15" fill="rgb(215,135,32)" fg:x="974" fg:w="1"/><text x="99.5364%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 0.10%)</title><rect x="99.2864%" y="821" width="0.1019%" height="15" fill="rgb(246,101,22)" fg:x="974" fg:w="1"/><text x="99.5364%" y="831.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;hyper::client::dispatch::Receiver&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="99.3884%" y="1013" width="0.1019%" height="15" fill="rgb(206,107,13)" fg:x="975" fg:w="1"/><text x="99.6384%" y="1023.50"></text></g><g><title>web_crawler`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.10%)</title><rect x="99.3884%" y="997" width="0.1019%" height="15" fill="rgb(250,100,44)" fg:x="975" fg:w="1"/><text x="99.6384%" y="1007.50"></text></g><g><title>web_crawler`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.10%)</title><rect x="99.3884%" y="981" width="0.1019%" height="15" fill="rgb(231,147,38)" fg:x="975" fg:w="1"/><text x="99.6384%" y="991.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.10%)</title><rect x="99.4903%" y="997" width="0.1019%" height="15" fill="rgb(229,8,40)" fg:x="976" fg:w="1"/><text x="99.7403%" y="1007.50"></text></g><g><title>Security`SSLContextDestroy (1 samples, 0.10%)</title><rect x="99.4903%" y="981" width="0.1019%" height="15" fill="rgb(221,135,30)" fg:x="976" fg:w="1"/><text x="99.7403%" y="991.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.10%)</title><rect x="99.4903%" y="965" width="0.1019%" height="15" fill="rgb(249,193,18)" fg:x="976" fg:w="1"/><text x="99.7403%" y="975.50"></text></g><g><title>Security`SecTrustDestroy (1 samples, 0.10%)</title><rect x="99.4903%" y="949" width="0.1019%" height="15" fill="rgb(209,133,39)" fg:x="976" fg:w="1"/><text x="99.7403%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.10%)</title><rect x="99.4903%" y="933" width="0.1019%" height="15" fill="rgb(232,100,14)" fg:x="976" fg:w="1"/><text x="99.7403%" y="943.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 0.10%)</title><rect x="99.4903%" y="917" width="0.1019%" height="15" fill="rgb(224,185,1)" fg:x="976" fg:w="1"/><text x="99.7403%" y="927.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.10%)</title><rect x="99.4903%" y="901" width="0.1019%" height="15" fill="rgb(223,139,8)" fg:x="976" fg:w="1"/><text x="99.7403%" y="911.50"></text></g><g><title>Security`SecCertificateDestroy (1 samples, 0.10%)</title><rect x="99.4903%" y="885" width="0.1019%" height="15" fill="rgb(232,213,38)" fg:x="976" fg:w="1"/><text x="99.7403%" y="895.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.10%)</title><rect x="99.4903%" y="869" width="0.1019%" height="15" fill="rgb(207,94,22)" fg:x="976" fg:w="1"/><text x="99.7403%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.10%)</title><rect x="99.4903%" y="853" width="0.1019%" height="15" fill="rgb(219,183,54)" fg:x="976" fg:w="1"/><text x="99.7403%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.10%)</title><rect x="99.4903%" y="837" width="0.1019%" height="15" fill="rgb(216,185,54)" fg:x="976" fg:w="1"/><text x="99.7403%" y="847.50"></text></g><g><title>web_crawler`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.82%)</title><rect x="98.9806%" y="1045" width="0.8155%" height="15" fill="rgb(254,217,39)" fg:x="971" fg:w="8"/><text x="99.2306%" y="1055.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (4 samples, 0.41%)</title><rect x="99.3884%" y="1029" width="0.4077%" height="15" fill="rgb(240,178,23)" fg:x="975" fg:w="4"/><text x="99.6384%" y="1039.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (3 samples, 0.31%)</title><rect x="99.4903%" y="1013" width="0.3058%" height="15" fill="rgb(218,11,47)" fg:x="976" fg:w="3"/><text x="99.7403%" y="1023.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;security_framework::secure_transport::Connection&lt;tokio_native_tls::AllowStd&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (2 samples, 0.20%)</title><rect x="99.5923%" y="997" width="0.2039%" height="15" fill="rgb(218,51,51)" fg:x="977" fg:w="2"/><text x="99.8423%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`close (2 samples, 0.20%)</title><rect x="99.5923%" y="981" width="0.2039%" height="15" fill="rgb(238,126,27)" fg:x="977" fg:w="2"/><text x="99.8423%" y="991.50"></text></g><g><title>web_crawler`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (801 samples, 81.65%)</title><rect x="18.2467%" y="1125" width="81.6514%" height="15" fill="rgb(249,202,22)" fg:x="179" fg:w="801"/><text x="18.4967%" y="1135.50">web_crawler`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>web_crawler`tokio::runtime::scheduler::current_thread::Context::run_task (9 samples, 0.92%)</title><rect x="98.9806%" y="1109" width="0.9174%" height="15" fill="rgb(254,195,49)" fg:x="971" fg:w="9"/><text x="99.2306%" y="1119.50"></text></g><g><title>web_crawler`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9 samples, 0.92%)</title><rect x="98.9806%" y="1093" width="0.9174%" height="15" fill="rgb(208,123,14)" fg:x="971" fg:w="9"/><text x="99.2306%" y="1103.50"></text></g><g><title>web_crawler`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (9 samples, 0.92%)</title><rect x="98.9806%" y="1077" width="0.9174%" height="15" fill="rgb(224,200,8)" fg:x="971" fg:w="9"/><text x="99.2306%" y="1087.50"></text></g><g><title>web_crawler`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.92%)</title><rect x="98.9806%" y="1061" width="0.9174%" height="15" fill="rgb(217,61,36)" fg:x="971" fg:w="9"/><text x="99.2306%" y="1071.50"></text></g><g><title>web_crawler`core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="99.7961%" y="1045" width="0.1019%" height="15" fill="rgb(206,35,45)" fg:x="979" fg:w="1"/><text x="100.0461%" y="1055.50"></text></g><g><title>web_crawler`&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="99.7961%" y="1029" width="0.1019%" height="15" fill="rgb(217,65,33)" fg:x="979" fg:w="1"/><text x="100.0461%" y="1039.50"></text></g><g><title>all (981 samples, 100%)</title><rect x="0.0000%" y="1253" width="100.0000%" height="15" fill="rgb(222,158,48)" fg:x="0" fg:w="981"/><text x="0.2500%" y="1263.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (974 samples, 99.29%)</title><rect x="0.7136%" y="1237" width="99.2864%" height="15" fill="rgb(254,2,54)" fg:x="7" fg:w="974"/><text x="0.9636%" y="1247.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (974 samples, 99.29%)</title><rect x="0.7136%" y="1221" width="99.2864%" height="15" fill="rgb(250,143,38)" fg:x="7" fg:w="974"/><text x="0.9636%" y="1231.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>web_crawler`std::sys::unix::thread::Thread::new::thread_start (974 samples, 99.29%)</title><rect x="0.7136%" y="1205" width="99.2864%" height="15" fill="rgb(248,25,0)" fg:x="7" fg:w="974"/><text x="0.9636%" y="1215.50">web_crawler`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>web_crawler`core::ops::function::FnOnce::call_once{{vtable.shim}} (974 samples, 99.29%)</title><rect x="0.7136%" y="1189" width="99.2864%" height="15" fill="rgb(206,152,27)" fg:x="7" fg:w="974"/><text x="0.9636%" y="1199.50">web_crawler`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>web_crawler`std::sys_common::backtrace::__rust_begin_short_backtrace (974 samples, 99.29%)</title><rect x="0.7136%" y="1173" width="99.2864%" height="15" fill="rgb(240,77,30)" fg:x="7" fg:w="974"/><text x="0.9636%" y="1183.50">web_crawler`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>web_crawler`tokio::task::local::LocalSet::block_on (802 samples, 81.75%)</title><rect x="18.2467%" y="1157" width="81.7533%" height="15" fill="rgb(231,5,3)" fg:x="179" fg:w="802"/><text x="18.4967%" y="1167.50">web_crawler`tokio::task::local::LocalSet::block_on</text></g><g><title>web_crawler`tokio::runtime::scheduler::current_thread::CurrentThread::block_on (802 samples, 81.75%)</title><rect x="18.2467%" y="1141" width="81.7533%" height="15" fill="rgb(207,226,32)" fg:x="179" fg:w="802"/><text x="18.4967%" y="1151.50">web_crawler`tokio::runtime::scheduler::current_thread::CurrentThread::block_on</text></g><g><title>web_crawler`tokio::runtime::scheduler::current_thread::Context::enter (1 samples, 0.10%)</title><rect x="99.8981%" y="1125" width="0.1019%" height="15" fill="rgb(222,207,47)" fg:x="980" fg:w="1"/><text x="100.1481%" y="1135.50"></text></g></svg></svg>